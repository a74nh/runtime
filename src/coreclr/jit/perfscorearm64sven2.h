// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/*****************************************************************************
* Perf scores for Arm N2 SVE instructions
* Taken from Arm Neoverse N2 Software Optimization Guide, Issue 5.0, Revision: r0p3
*****************************************************************************/

// CRC checksum ops
#define PERFSCORE_LATENCY_N2_CRC_CHECKSUM_OPS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CRC_CHECKSUM_OPS PERFSCORE_THROUGHPUT_1C

// Loop control, based on predicate
#define PERFSCORE_LATENCY_N2_LOOP_CONTROL_BASED_ON_PREDICATE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_LOOP_CONTROL_BASED_ON_PREDICATE PERFSCORE_THROUGHPUT_2X

// Loop control, based on predicate and flag setting
#define PERFSCORE_LATENCY_N2_LOOP_CONTROL_BASED_ON_PREDICATE_AND_FLAG_SETTING PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_LOOP_CONTROL_BASED_ON_PREDICATE_AND_FLAG_SETTING PERFSCORE_THROUGHPUT_2X

// Loop control, propagating
#define PERFSCORE_LATENCY_N2_LOOP_CONTROL_PROPAGATING PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_LOOP_CONTROL_PROPAGATING PERFSCORE_THROUGHPUT_1C

// Loop control, propagating and flag setting
#define PERFSCORE_LATENCY_N2_LOOP_CONTROL_PROPAGATING_AND_FLAG_SETTING PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_LOOP_CONTROL_PROPAGATING_AND_FLAG_SETTING PERFSCORE_THROUGHPUT_1C

// Loop control, based on GPR
#define PERFSCORE_LATENCY_N2_LOOP_CONTROL_BASED_ON_GPR PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_LOOP_CONTROL_BASED_ON_GPR PERFSCORE_THROUGHPUT_1C

// Loop terminate
#define PERFSCORE_LATENCY_N2_LOOP_TERMINATE PERFSCORE_LATENCY_1C
#define PERFSCORE_THROUGHPUT_N2_LOOP_TERMINATE PERFSCORE_THROUGHPUT_1C

// Predicate counting scalar
#define PERFSCORE_LATENCY_N2_PREDICATE_COUNTING_SCALAR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_COUNTING_SCALAR PERFSCORE_THROUGHPUT_2X

// Predicate counting scalar, ALL, {1,2,4}
#define PERFSCORE_LATENCY_N2_PREDICATE_COUNTING_SCALAR_ALL_124 PERFSCORE_LATENCY_1C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_COUNTING_SCALAR_ALL_124 PERFSCORE_THROUGHPUT_4X

// Predicate counting scalar, active predicate
#define PERFSCORE_LATENCY_N2_PREDICATE_COUNTING_SCALAR_ACTIVE_PREDICATE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_COUNTING_SCALAR_ACTIVE_PREDICATE PERFSCORE_THROUGHPUT_2X

// Predicate counting vector, active predicate
#define PERFSCORE_LATENCY_N2_PREDICATE_COUNTING_VECTOR_ACTIVE_PREDICATE PERFSCORE_LATENCY_7C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_COUNTING_VECTOR_ACTIVE_PREDICATE PERFSCORE_THROUGHPUT_1C

// Predicate logical
#define PERFSCORE_LATENCY_N2_PREDICATE_LOGICAL PERFSCORE_LATENCY_1C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_LOGICAL PERFSCORE_THROUGHPUT_1C

// Predicate logical, flag setting
#define PERFSCORE_LATENCY_N2_PREDICATE_LOGICAL_FLAG_SETTING PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_LOGICAL_FLAG_SETTING PERFSCORE_THROUGHPUT_1C

// Predicate reverse
#define PERFSCORE_LATENCY_N2_PREDICATE_REVERSE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_REVERSE PERFSCORE_THROUGHPUT_2X

// Predicate select
#define PERFSCORE_LATENCY_N2_PREDICATE_SELECT PERFSCORE_LATENCY_1C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_SELECT PERFSCORE_THROUGHPUT_1C

// Predicate set
#define PERFSCORE_LATENCY_N2_PREDICATE_SET PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_SET PERFSCORE_THROUGHPUT_2X

// Predicate set/initialize, set flags
#define PERFSCORE_LATENCY_N2_PREDICATE_SET_INITIALIZE_SET_FLAGS PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_SET_INITIALIZE_SET_FLAGS PERFSCORE_THROUGHPUT_2X

// Predicate find first/next
#define PERFSCORE_LATENCY_N2_PREDICATE_FIND_FIRST_NEXT PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_FIND_FIRST_NEXT PERFSCORE_THROUGHPUT_2X

// Predicate test
#define PERFSCORE_LATENCY_N2_PREDICATE_TEST PERFSCORE_LATENCY_1C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_TEST PERFSCORE_THROUGHPUT_2X

// Predicate transpose
#define PERFSCORE_LATENCY_N2_PREDICATE_TRANSPOSE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_TRANSPOSE PERFSCORE_THROUGHPUT_2X

// Predicate unpack and widen
#define PERFSCORE_LATENCY_N2_PREDICATE_UNPACK_AND_WIDEN PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_UNPACK_AND_WIDEN PERFSCORE_THROUGHPUT_2X

// Predicate zip/unzip
#define PERFSCORE_LATENCY_N2_PREDICATE_ZIP_UNZIP PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_ZIP_UNZIP PERFSCORE_THROUGHPUT_2X

// Load vector
#define PERFSCORE_LATENCY_N2_LOAD_VECTOR PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_LOAD_VECTOR PERFSCORE_THROUGHPUT_3X

// Load predicate
#define PERFSCORE_LATENCY_N2_LOAD_PREDICATE PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_LOAD_PREDICATE PERFSCORE_THROUGHPUT_3X

// Contiguous load, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_SCALAR_IMM PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_SCALAR_IMM PERFSCORE_THROUGHPUT_3X

// Contiguous load, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_SCALAR_SCALAR PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_SCALAR_SCALAR PERFSCORE_THROUGHPUT_3X

// Contiguous load broadcast, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_BROADCAST_SCALAR_IMM PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_BROADCAST_SCALAR_IMM PERFSCORE_THROUGHPUT_3X

// Contiguous load broadcast, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_BROADCAST_SCALAR_SCALAR PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_BROADCAST_SCALAR_SCALAR PERFSCORE_THROUGHPUT_3X

// Non temporal load, scalar + imm
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_LOAD_SCALAR_IMM PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_LOAD_SCALAR_IMM PERFSCORE_THROUGHPUT_3X

// Non temporal load, scalar + scalar
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_LOAD_SCALAR_SCALAR PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_LOAD_SCALAR_SCALAR PERFSCORE_THROUGHPUT_3X

// Non temporal gather load, vector + scalar 32-bit element size
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_GATHER_LOAD_VECTOR_SCALAR_32_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_GATHER_LOAD_VECTOR_SCALAR_32_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Non temporal gather load, vector + scalar 64-bit element size
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_GATHER_LOAD_VECTOR_SCALAR_64_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_GATHER_LOAD_VECTOR_SCALAR_64_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Contiguous first faulting load, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_FIRST_FAULTING_LOAD_SCALAR_SCALAR PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_FIRST_FAULTING_LOAD_SCALAR_SCALAR PERFSCORE_THROUGHPUT_3X

// Contiguous non faulting load, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_NON_FAULTING_LOAD_SCALAR_IMM PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_NON_FAULTING_LOAD_SCALAR_IMM PERFSCORE_THROUGHPUT_3X

// Contiguous Load two structures to two vectors, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_TWO_STRUCTURES_TO_TWO_VECTORS_SCALAR_IMM PERFSCORE_LATENCY_8C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_TWO_STRUCTURES_TO_TWO_VECTORS_SCALAR_IMM PERFSCORE_THROUGHPUT_1C

// Contiguous Load two structures to two vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_TWO_STRUCTURES_TO_TWO_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_TWO_STRUCTURES_TO_TWO_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_1C

// Contiguous Load three structures to three vectors, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_THREE_STRUCTURES_TO_THREE_VECTORS_SCALAR_IMM PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_THREE_STRUCTURES_TO_THREE_VECTORS_SCALAR_IMM PERFSCORE_THROUGHPUT_1_5C

// Contiguous Load three structures to three vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_THREE_STRUCTURES_TO_THREE_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_THREE_STRUCTURES_TO_THREE_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_1_5C

// Contiguous Load four structures to four vectors, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_FOUR_STRUCTURES_TO_FOUR_VECTORS_SCALAR_IMM PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_FOUR_STRUCTURES_TO_FOUR_VECTORS_SCALAR_IMM PERFSCORE_THROUGHPUT_2C

// Contiguous Load four structures to four vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_LOAD_FOUR_STRUCTURES_TO_FOUR_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_LOAD_FOUR_STRUCTURES_TO_FOUR_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_2C

// Gather load, vector + imm, 32-bit element size
#define PERFSCORE_LATENCY_N2_GATHER_LOAD_VECTOR_IMM_32_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_GATHER_LOAD_VECTOR_IMM_32_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Gather load, vector + imm, 64-bit element size
#define PERFSCORE_LATENCY_N2_GATHER_LOAD_VECTOR_IMM_64_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_GATHER_LOAD_VECTOR_IMM_64_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Gather load, 32-bit scaled offset
#define PERFSCORE_LATENCY_N2_GATHER_LOAD_32_BIT_SCALED_OFFSET PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_GATHER_LOAD_32_BIT_SCALED_OFFSET PERFSCORE_THROUGHPUT_2C

// Gather load, 32-bit unpacked unscaled offset
#define PERFSCORE_LATENCY_N2_GATHER_LOAD_32_BIT_UNPACKED_UNSCALED_OFFSET PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_GATHER_LOAD_32_BIT_UNPACKED_UNSCALED_OFFSET PERFSCORE_THROUGHPUT_1C

// Store from predicate reg
#define PERFSCORE_LATENCY_N2_STORE_FROM_PREDICATE_REG PERFSCORE_LATENCY_1C
#define PERFSCORE_THROUGHPUT_N2_STORE_FROM_PREDICATE_REG PERFSCORE_THROUGHPUT_2X

// Store from vector reg
#define PERFSCORE_LATENCY_N2_STORE_FROM_VECTOR_REG PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_STORE_FROM_VECTOR_REG PERFSCORE_THROUGHPUT_2X

// Contiguous store, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_SCALAR_IMM PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_SCALAR_IMM PERFSCORE_THROUGHPUT_2X

// Contiguous store, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_SCALAR_SCALAR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_SCALAR_SCALAR PERFSCORE_THROUGHPUT_2X

// Contiguous store, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_SCALAR_SCALAR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_SCALAR_SCALAR PERFSCORE_THROUGHPUT_2X

// Contiguous store two structures from two vectors, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_TWO_STRUCTURES_FROM_TWO_VECTORS_SCALAR_IMM PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_TWO_STRUCTURES_FROM_TWO_VECTORS_SCALAR_IMM PERFSCORE_THROUGHPUT_1C

// Contiguous store two structures from two vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_TWO_STRUCTURES_FROM_TWO_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_TWO_STRUCTURES_FROM_TWO_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_1C

// Contiguous store two structures from two vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_TWO_STRUCTURES_FROM_TWO_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_TWO_STRUCTURES_FROM_TWO_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_1C

// Contiguous store three structures from three vectors, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_THREE_STRUCTURES_FROM_THREE_VECTORS_SCALAR_IMM PERFSCORE_LATENCY_7C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_THREE_STRUCTURES_FROM_THREE_VECTORS_SCALAR_IMM PERFSCORE_THROUGHPUT_4_5C

// Contiguous store three structures from three vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_THREE_STRUCTURES_FROM_THREE_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_7C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_THREE_STRUCTURES_FROM_THREE_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_4_5C

// Contiguous store three structures from three vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_THREE_STRUCTURES_FROM_THREE_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_7C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_THREE_STRUCTURES_FROM_THREE_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_4_5C

// Contiguous store four structures from four vectors, scalar + imm
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_FOUR_STRUCTURES_FROM_FOUR_VECTORS_SCALAR_IMM PERFSCORE_LATENCY_11C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_FOUR_STRUCTURES_FROM_FOUR_VECTORS_SCALAR_IMM PERFSCORE_THROUGHPUT_9C

// Contiguous store four structures from four vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_FOUR_STRUCTURES_FROM_FOUR_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_11C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_FOUR_STRUCTURES_FROM_FOUR_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_9C

// Contiguous store four structures from four vectors, scalar + scalar
#define PERFSCORE_LATENCY_N2_CONTIGUOUS_STORE_FOUR_STRUCTURES_FROM_FOUR_VECTORS_SCALAR_SCALAR PERFSCORE_LATENCY_11C
#define PERFSCORE_THROUGHPUT_N2_CONTIGUOUS_STORE_FOUR_STRUCTURES_FROM_FOUR_VECTORS_SCALAR_SCALAR PERFSCORE_THROUGHPUT_9C

// Non temporal store, scalar + imm
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_STORE_SCALAR_IMM PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_STORE_SCALAR_IMM PERFSCORE_THROUGHPUT_2X

// Non temporal store, scalar + scalar
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_STORE_SCALAR_SCALAR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_STORE_SCALAR_SCALAR PERFSCORE_THROUGHPUT_2X

// Non temporal store, scalar + scalar
#define PERFSCORE_LATENCY_N2_NON_TEMPORAL_STORE_SCALAR_SCALAR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_NON_TEMPORAL_STORE_SCALAR_SCALAR PERFSCORE_THROUGHPUT_2X

// Scatter non temporal store, vector + scalar 32-bit element size
#define PERFSCORE_LATENCY_N2_SCATTER_NON_TEMPORAL_STORE_VECTOR_SCALAR_32_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_NON_TEMPORAL_STORE_VECTOR_SCALAR_32_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Scatter non temporal store, vector + scalar 64-bit element size
#define PERFSCORE_LATENCY_N2_SCATTER_NON_TEMPORAL_STORE_VECTOR_SCALAR_64_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_NON_TEMPORAL_STORE_VECTOR_SCALAR_64_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Scatter store vector + imm 32-bit element size
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_VECTOR_IMM_32_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_VECTOR_IMM_32_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Scatter store vector + imm 64-bit element size
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_VECTOR_IMM_64_BIT_ELEMENT_SIZE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_VECTOR_IMM_64_BIT_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Scatter store, 32-bit scaled offset
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_32_BIT_SCALED_OFFSET PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_32_BIT_SCALED_OFFSET PERFSCORE_THROUGHPUT_2C

// Scatter store, 32-bit unpacked unscaled offset
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_32_BIT_UNPACKED_UNSCALED_OFFSET PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_32_BIT_UNPACKED_UNSCALED_OFFSET PERFSCORE_THROUGHPUT_1C

// Scatter store, 32-bit unpacked scaled offset
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_32_BIT_UNPACKED_SCALED_OFFSET PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_32_BIT_UNPACKED_SCALED_OFFSET PERFSCORE_THROUGHPUT_1C

// Scatter store, 32-bit unscaled offset
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_32_BIT_UNSCALED_OFFSET PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_32_BIT_UNSCALED_OFFSET PERFSCORE_THROUGHPUT_2C

// Scatter store, 64-bit scaled offset
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_64_BIT_SCALED_OFFSET PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_64_BIT_SCALED_OFFSET PERFSCORE_THROUGHPUT_1C

// Scatter store, 64-bit unscaled offset
#define PERFSCORE_LATENCY_N2_SCATTER_STORE_64_BIT_UNSCALED_OFFSET PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SCATTER_STORE_64_BIT_UNSCALED_OFFSET PERFSCORE_THROUGHPUT_1C

// Convert, F32 to BF16
#define PERFSCORE_LATENCY_N2_BF_CONVERT_F32_TO_BF16 PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_BF_CONVERT_F32_TO_BF16 PERFSCORE_THROUGHPUT_1C

// Dot product
#define PERFSCORE_LATENCY_N2_BF_DOT_PRODUCT PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_BF_DOT_PRODUCT PERFSCORE_THROUGHPUT_2X

// Matrix multiply accumulate
#define PERFSCORE_LATENCY_N2_BF_MATRIX_MULTIPLY_ACCUMULATE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_BF_MATRIX_MULTIPLY_ACCUMULATE PERFSCORE_THROUGHPUT_2X

// Multiply accumulate long
#define PERFSCORE_LATENCY_N2_BF_MULTIPLY_ACCUMULATE_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_BF_MULTIPLY_ACCUMULATE_LONG PERFSCORE_THROUGHPUT_2X

// Floating point absolute value/difference
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ABSOLUTE_VALUE_DIFFERENCE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ABSOLUTE_VALUE_DIFFERENCE PERFSCORE_THROUGHPUT_2X

// Floating point arithmetic
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ARITHMETIC PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ARITHMETIC PERFSCORE_THROUGHPUT_2X

// Floating point associative add, F16
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ASSOCIATIVE_ADD_F16 PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ASSOCIATIVE_ADD_F16 PERFSCORE_THROUGHPUT_9C

// Floating point associative add, F32
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ASSOCIATIVE_ADD_F32 PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ASSOCIATIVE_ADD_F32 PERFSCORE_THROUGHPUT_5C

// Floating point associative add, F64
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ASSOCIATIVE_ADD_F64 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ASSOCIATIVE_ADD_F64 PERFSCORE_THROUGHPUT_2X

// Floating point compare
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_COMPARE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_COMPARE PERFSCORE_THROUGHPUT_1C

// Floating point complex add
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_COMPLEX_ADD PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_COMPLEX_ADD PERFSCORE_THROUGHPUT_2X

// Floating point complex multiply add
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_COMPLEX_MULTIPLY_ADD PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_COMPLEX_MULTIPLY_ADD PERFSCORE_THROUGHPUT_2X

// Floating point convert, long or narrow (F16 to F32 or F32 to F16)
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_CONVERT_LONG_OR_NARROW_F16_TO_F32_OR_F32_TO_F16 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_CONVERT_LONG_OR_NARROW_F16_TO_F32_OR_F32_TO_F16 PERFSCORE_THROUGHPUT_2C

// Floating point convert, long or narrow (F16 to F64, F32 to F64, F64 to F32 or F64 to F16)
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_CONVERT_LONG_OR_NARROW_F16_TO_F64_F32_TO_F64_F64_TO_F32_OR_F64_TO_F16 PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_CONVERT_LONG_OR_NARROW_F16_TO_F64_F32_TO_F64_F64_TO_F32_OR_F64_TO_F16 PERFSCORE_THROUGHPUT_1C

// Floating point convert, round to odd
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_CONVERT_ROUND_TO_ODD PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_CONVERT_ROUND_TO_ODD PERFSCORE_THROUGHPUT_1C

// Floating point base2 log, F16
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_BASE2_LOG_F16 PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_BASE2_LOG_F16 PERFSCORE_THROUGHPUT_4C

// Floating point base2 log, F32
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_BASE2_LOG_F32 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_BASE2_LOG_F32 PERFSCORE_THROUGHPUT_2C

// Floating point base2 log, F64
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_BASE2_LOG_F64 PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_BASE2_LOG_F64 PERFSCORE_THROUGHPUT_1C

// Floating point convert to integer, F16
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_CONVERT_TO_INTEGER_F16 PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_CONVERT_TO_INTEGER_F16 PERFSCORE_THROUGHPUT_4C

// Floating point convert to integer, F32
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_CONVERT_TO_INTEGER_F32 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_CONVERT_TO_INTEGER_F32 PERFSCORE_THROUGHPUT_2C

// Floating point convert to integer, F64
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_CONVERT_TO_INTEGER_F64 PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_CONVERT_TO_INTEGER_F64 PERFSCORE_THROUGHPUT_1C

// Floating point copy
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_COPY PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_COPY PERFSCORE_THROUGHPUT_2X

// Floating point divide, F16
#define PERFSCORE_LATENCY_N2_MIN_FLOATING_POINT_DIVIDE_F16 PERFSCORE_LATENCY_10C
#define PERFSCORE_LATENCY_N2_MAX_FLOATING_POINT_DIVIDE_F16 PERFSCORE_LATENCY_13C
#define PERFSCORE_THROUGHPUT_N2_MIN_FLOATING_POINT_DIVIDE_F16 PERFSCORE_THROUGHPUT_12C
#define PERFSCORE_THROUGHPUT_N2_MAX_FLOATING_POINT_DIVIDE_F16 PERFSCORE_THROUGHPUT_12X

// Floating point divide, F32
#define PERFSCORE_LATENCY_N2_MIN_FLOATING_POINT_DIVIDE_F32 PERFSCORE_LATENCY_7C
#define PERFSCORE_LATENCY_N2_MAX_FLOATING_POINT_DIVIDE_F32 PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_MIN_FLOATING_POINT_DIVIDE_F32 PERFSCORE_THROUGHPUT_9C
#define PERFSCORE_THROUGHPUT_N2_MAX_FLOATING_POINT_DIVIDE_F32 PERFSCORE_THROUGHPUT_9X

// Floating point divide, F64
#define PERFSCORE_LATENCY_N2_MIN_FLOATING_POINT_DIVIDE_F64 PERFSCORE_LATENCY_7C
#define PERFSCORE_LATENCY_N2_MAX_FLOATING_POINT_DIVIDE_F64 PERFSCORE_LATENCY_15C
#define PERFSCORE_THROUGHPUT_N2_MIN_FLOATING_POINT_DIVIDE_F64 PERFSCORE_THROUGHPUT_14C
#define PERFSCORE_THROUGHPUT_N2_MAX_FLOATING_POINT_DIVIDE_F64 PERFSCORE_THROUGHPUT_14X

// Floating point min/max pairwise
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_MIN_MAX_PAIRWISE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_MIN_MAX_PAIRWISE PERFSCORE_THROUGHPUT_2X

// Floating point min/max
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_MIN_MAX PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_MIN_MAX PERFSCORE_THROUGHPUT_2X

// Floating point multiply
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_MULTIPLY PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_MULTIPLY PERFSCORE_THROUGHPUT_2X

// Floating point multiply accumulate
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_MULTIPLY_ACCUMULATE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_MULTIPLY_ACCUMULATE PERFSCORE_THROUGHPUT_2X

// Floating point multiply add/sub accumulate long
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_MULTIPLY_ADD_SUB_ACCUMULATE_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_MULTIPLY_ADD_SUB_ACCUMULATE_LONG PERFSCORE_THROUGHPUT_2X

// Floating point reciprocal estimate, F16
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_RECIPROCAL_ESTIMATE_F16 PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_RECIPROCAL_ESTIMATE_F16 PERFSCORE_THROUGHPUT_4C

// Floating point reciprocal estimate, F32
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_RECIPROCAL_ESTIMATE_F32 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_RECIPROCAL_ESTIMATE_F32 PERFSCORE_THROUGHPUT_2C

// Floating point reciprocal estimate, F64
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_RECIPROCAL_ESTIMATE_F64 PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_RECIPROCAL_ESTIMATE_F64 PERFSCORE_THROUGHPUT_1C

// Floating point reciprocal step
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_RECIPROCAL_STEP PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_RECIPROCAL_STEP PERFSCORE_THROUGHPUT_2X

// Floating point reduction, F16
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_REDUCTION_F16 PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_REDUCTION_F16 PERFSCORE_THROUGHPUT_1_5C

// Floating point reduction, F32
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_REDUCTION_F32 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_REDUCTION_F32 PERFSCORE_THROUGHPUT_1C

// Floating point reduction, F64
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_REDUCTION_F64 PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_REDUCTION_F64 PERFSCORE_THROUGHPUT_2X

// Floating point round to integral, F16
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ROUND_TO_INTEGRAL_F16 PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ROUND_TO_INTEGRAL_F16 PERFSCORE_THROUGHPUT_4C

// Floating point round to integral, F32
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ROUND_TO_INTEGRAL_F32 PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ROUND_TO_INTEGRAL_F32 PERFSCORE_THROUGHPUT_2C

// Floating point round to integral, F64
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_ROUND_TO_INTEGRAL_F64 PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_ROUND_TO_INTEGRAL_F64 PERFSCORE_THROUGHPUT_1C

// Floating point square root, F16
#define PERFSCORE_LATENCY_N2_MIN_FLOATING_POINT_SQUARE_ROOT_F16 PERFSCORE_LATENCY_10C
#define PERFSCORE_LATENCY_N2_MAX_FLOATING_POINT_SQUARE_ROOT_F16 PERFSCORE_LATENCY_13C
#define PERFSCORE_THROUGHPUT_N2_MIN_FLOATING_POINT_SQUARE_ROOT_F16 PERFSCORE_THROUGHPUT_12C
#define PERFSCORE_THROUGHPUT_N2_MAX_FLOATING_POINT_SQUARE_ROOT_F16 PERFSCORE_THROUGHPUT_12X

// Floating point square root, F32
#define PERFSCORE_LATENCY_N2_MIN_FLOATING_POINT_SQUARE_ROOT_F32 PERFSCORE_LATENCY_7C
#define PERFSCORE_LATENCY_N2_MAX_FLOATING_POINT_SQUARE_ROOT_F32 PERFSCORE_LATENCY_10C
#define PERFSCORE_THROUGHPUT_N2_MIN_FLOATING_POINT_SQUARE_ROOT_F32 PERFSCORE_THROUGHPUT_9C
#define PERFSCORE_THROUGHPUT_N2_MAX_FLOATING_POINT_SQUARE_ROOT_F32 PERFSCORE_THROUGHPUT_9X

// Floating point square root F64
#define PERFSCORE_LATENCY_N2_MIN_FLOATING_POINT_SQUARE_ROOT_F64 PERFSCORE_LATENCY_7C
#define PERFSCORE_LATENCY_N2_MAX_FLOATING_POINT_SQUARE_ROOT_F64 PERFSCORE_LATENCY_16C
#define PERFSCORE_THROUGHPUT_N2_MIN_FLOATING_POINT_SQUARE_ROOT_F64 PERFSCORE_THROUGHPUT_14C
#define PERFSCORE_THROUGHPUT_N2_MAX_FLOATING_POINT_SQUARE_ROOT_F64 PERFSCORE_THROUGHPUT_14X

// Floating point trigonometric exponentiation
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_TRIGONOMETRIC_EXPONENTIATION PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_TRIGONOMETRIC_EXPONENTIATION PERFSCORE_THROUGHPUT_1C

// Floating point trigonometric multiply add
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_TRIGONOMETRIC_MULTIPLY_ADD PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_TRIGONOMETRIC_MULTIPLY_ADD PERFSCORE_THROUGHPUT_2X

// Floating point trigonometric, miscellaneous
#define PERFSCORE_LATENCY_N2_FLOATING_POINT_TRIGONOMETRIC_MISCELLANEOUS PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_FLOATING_POINT_TRIGONOMETRIC_MISCELLANEOUS PERFSCORE_THROUGHPUT_2X

// Arithmetic, basic
#define PERFSCORE_LATENCY_N2_ARITHMETIC_BASIC PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_BASIC PERFSCORE_THROUGHPUT_2X

// Arithmetic, complex
#define PERFSCORE_LATENCY_N2_ARITHMETIC_COMPLEX PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_COMPLEX PERFSCORE_THROUGHPUT_2X

// Arithmetic, large integer
#define PERFSCORE_LATENCY_N2_ARITHMETIC_LARGE_INTEGER PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_LARGE_INTEGER PERFSCORE_THROUGHPUT_2X

// Arithmetic, pairwise add
#define PERFSCORE_LATENCY_N2_ARITHMETIC_PAIRWISE_ADD PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_PAIRWISE_ADD PERFSCORE_THROUGHPUT_2X

// Arithmetic, pairwise add and accum long
#define PERFSCORE_LATENCY_N2_ARITHMETIC_PAIRWISE_ADD_AND_ACCUM_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_PAIRWISE_ADD_AND_ACCUM_LONG PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift and accumulate
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT_AND_ACCUMULATE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT_AND_ACCUMULATE PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift by immediate
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT_BY_IMMEDIATE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT_BY_IMMEDIATE PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift by immediate and insert
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT_BY_IMMEDIATE_AND_INSERT PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT_BY_IMMEDIATE_AND_INSERT PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift complex
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT_COMPLEX PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT_COMPLEX PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift right for divide
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT_RIGHT_FOR_DIVIDE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT_RIGHT_FOR_DIVIDE PERFSCORE_THROUGHPUT_1C

// Arithmetic, shift rounding
#define PERFSCORE_LATENCY_N2_ARITHMETIC_SHIFT_ROUNDING PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_SHIFT_ROUNDING PERFSCORE_THROUGHPUT_1C

// Bit manipulation
#define PERFSCORE_LATENCY_N2_BIT_MANIPULATION PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_BIT_MANIPULATION PERFSCORE_THROUGHPUT_2C

// Bitwise select
#define PERFSCORE_LATENCY_N2_BITWISE_SELECT PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_BITWISE_SELECT PERFSCORE_THROUGHPUT_2X

// Count/reverse bits
#define PERFSCORE_LATENCY_N2_COUNT_REVERSE_BITS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_COUNT_REVERSE_BITS PERFSCORE_THROUGHPUT_2X

// Broadcast logical bitmask immediate to vector
#define PERFSCORE_LATENCY_N2_BROADCAST_LOGICAL_BITMASK_IMMEDIATE_TO_VECTOR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_BROADCAST_LOGICAL_BITMASK_IMMEDIATE_TO_VECTOR PERFSCORE_THROUGHPUT_2X

// Compare and set flags
#define PERFSCORE_LATENCY_N2_COMPARE_AND_SET_FLAGS PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_COMPARE_AND_SET_FLAGS PERFSCORE_THROUGHPUT_1C

// Complex add
#define PERFSCORE_LATENCY_N2_COMPLEX_ADD PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_COMPLEX_ADD PERFSCORE_THROUGHPUT_2X

// Complex dot product 8-bit element
#define PERFSCORE_LATENCY_N2_COMPLEX_DOT_PRODUCT_8_BIT_ELEMENT PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_COMPLEX_DOT_PRODUCT_8_BIT_ELEMENT PERFSCORE_THROUGHPUT_2X

// Complex dot product 16-bit element
#define PERFSCORE_LATENCY_N2_COMPLEX_DOT_PRODUCT_16_BIT_ELEMENT PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_COMPLEX_DOT_PRODUCT_16_BIT_ELEMENT PERFSCORE_THROUGHPUT_1C

// Complex multiply-add B, H, S element size
#define PERFSCORE_LATENCY_N2_COMPLEX_MULTIPLY_ADD_B_H_S_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_COMPLEX_MULTIPLY_ADD_B_H_S_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Complex multiply-add D element size
#define PERFSCORE_LATENCY_N2_COMPLEX_MULTIPLY_ADD_D_ELEMENT_SIZE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_COMPLEX_MULTIPLY_ADD_D_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Conditional extract operations, scalar form
#define PERFSCORE_LATENCY_N2_CONDITIONAL_EXTRACT_OPERATIONS_SCALAR_FORM PERFSCORE_LATENCY_8C
#define PERFSCORE_THROUGHPUT_N2_CONDITIONAL_EXTRACT_OPERATIONS_SCALAR_FORM PERFSCORE_THROUGHPUT_1C

// Conditional extract operations, SIMD&FP scalar and vector forms
#define PERFSCORE_LATENCY_N2_CONDITIONAL_EXTRACT_OPERATIONS_SIMDFP_SCALAR_AND_VECTOR_FORMS PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_CONDITIONAL_EXTRACT_OPERATIONS_SIMDFP_SCALAR_AND_VECTOR_FORMS PERFSCORE_THROUGHPUT_1C

// Convert to floating point, 64b to float or convert to double
#define PERFSCORE_LATENCY_N2_CONVERT_TO_FLOATING_POINT_64B_TO_FLOAT_OR_CONVERT_TO_DOUBLE PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_CONVERT_TO_FLOATING_POINT_64B_TO_FLOAT_OR_CONVERT_TO_DOUBLE PERFSCORE_THROUGHPUT_1C

// Convert to floating point, 32b to single or half
#define PERFSCORE_LATENCY_N2_CONVERT_TO_FLOATING_POINT_32B_TO_SINGLE_OR_HALF PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_CONVERT_TO_FLOATING_POINT_32B_TO_SINGLE_OR_HALF PERFSCORE_THROUGHPUT_2C

// Convert to floating point, 16b to half
#define PERFSCORE_LATENCY_N2_CONVERT_TO_FLOATING_POINT_16B_TO_HALF PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_CONVERT_TO_FLOATING_POINT_16B_TO_HALF PERFSCORE_THROUGHPUT_4C

// Copy, scalar
#define PERFSCORE_LATENCY_N2_COPY_SCALAR PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_COPY_SCALAR PERFSCORE_THROUGHPUT_1C

// Copy, scalar SIMD&FP or imm
#define PERFSCORE_LATENCY_N2_COPY_SCALAR_SIMDFP_OR_IMM PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_COPY_SCALAR_SIMDFP_OR_IMM PERFSCORE_THROUGHPUT_2X

// Divides, 32 bit
#define PERFSCORE_LATENCY_N2_MIN_DIVIDES_32_BIT PERFSCORE_LATENCY_7C
#define PERFSCORE_LATENCY_N2_MAX_DIVIDES_32_BIT PERFSCORE_LATENCY_12C
#define PERFSCORE_THROUGHPUT_N2_MIN_DIVIDES_32_BIT PERFSCORE_THROUGHPUT_11C
#define PERFSCORE_THROUGHPUT_N2_MAX_DIVIDES_32_BIT PERFSCORE_THROUGHPUT_11X

// Divides, 64 bit
#define PERFSCORE_LATENCY_N2_MIN_DIVIDES_64_BIT PERFSCORE_LATENCY_7C
#define PERFSCORE_LATENCY_N2_MAX_DIVIDES_64_BIT PERFSCORE_LATENCY_20C
#define PERFSCORE_THROUGHPUT_N2_MIN_DIVIDES_64_BIT PERFSCORE_THROUGHPUT_20C
#define PERFSCORE_THROUGHPUT_N2_MAX_DIVIDES_64_BIT PERFSCORE_THROUGHPUT_20X

// Dot product, 8 bit
#define PERFSCORE_LATENCY_N2_DOT_PRODUCT_8_BIT PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_DOT_PRODUCT_8_BIT PERFSCORE_THROUGHPUT_2X

// Dot product, 8 bit, using signed and unsigned integers
#define PERFSCORE_LATENCY_N2_DOT_PRODUCT_8_BIT_USING_SIGNED_AND_UNSIGNED_INTEGERS PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_DOT_PRODUCT_8_BIT_USING_SIGNED_AND_UNSIGNED_INTEGERS PERFSCORE_THROUGHPUT_2X

// Dot product, 16 bit
#define PERFSCORE_LATENCY_N2_DOT_PRODUCT_16_BIT PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_DOT_PRODUCT_16_BIT PERFSCORE_THROUGHPUT_1C

// Duplicate, immediate and indexed form
#define PERFSCORE_LATENCY_N2_DUPLICATE_IMMEDIATE_AND_INDEXED_FORM PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_DUPLICATE_IMMEDIATE_AND_INDEXED_FORM PERFSCORE_THROUGHPUT_2X

// Duplicate, scalar form
#define PERFSCORE_LATENCY_N2_DUPLICATE_SCALAR_FORM PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_DUPLICATE_SCALAR_FORM PERFSCORE_THROUGHPUT_1C

// Extend, sign or zero
#define PERFSCORE_LATENCY_N2_EXTEND_SIGN_OR_ZERO PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_EXTEND_SIGN_OR_ZERO PERFSCORE_THROUGHPUT_1C

// Extract
#define PERFSCORE_LATENCY_N2_EXTRACT PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_EXTRACT PERFSCORE_THROUGHPUT_2X

// Extract narrow saturating
#define PERFSCORE_LATENCY_N2_EXTRACT_NARROW_SATURATING PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_EXTRACT_NARROW_SATURATING PERFSCORE_THROUGHPUT_1C

// Extract/insert operation, SIMD and FP scalar form
#define PERFSCORE_LATENCY_N2_EXTRACT_INSERT_OPERATION_SIMD_AND_FP_SCALAR_FORM PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_EXTRACT_INSERT_OPERATION_SIMD_AND_FP_SCALAR_FORM PERFSCORE_THROUGHPUT_1C

// Extract/insert operation, scalar
#define PERFSCORE_LATENCY_N2_EXTRACT_INSERT_OPERATION_SCALAR PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_EXTRACT_INSERT_OPERATION_SCALAR PERFSCORE_THROUGHPUT_1C

// Histogram operations
#define PERFSCORE_LATENCY_N2_HISTOGRAM_OPERATIONS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_HISTOGRAM_OPERATIONS PERFSCORE_THROUGHPUT_2X

// Horizontal operations, B, H, S form, immediate operands only
#define PERFSCORE_LATENCY_N2_HORIZONTAL_OPERATIONS_B_H_S_FORM_IMMEDIATE_OPERANDS_ONLY PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_HORIZONTAL_OPERATIONS_B_H_S_FORM_IMMEDIATE_OPERANDS_ONLY PERFSCORE_THROUGHPUT_1C

// Horizontal operations, B, H, S form, scalar, immediate operands)/ scalar operands only / immediate, scalar operands
#define PERFSCORE_LATENCY_N2_HORIZONTAL_OPERATIONS_B_H_S_FORM_SCALAR_IMMEDIATE_OPERANDS_SCALAR_OPERANDS_ONLY_IMMEDIATE_SCALAR_OPERANDS PERFSCORE_LATENCY_7C
#define PERFSCORE_THROUGHPUT_N2_HORIZONTAL_OPERATIONS_B_H_S_FORM_SCALAR_IMMEDIATE_OPERANDS_SCALAR_OPERANDS_ONLY_IMMEDIATE_SCALAR_OPERANDS PERFSCORE_THROUGHPUT_1C

// Horizontal operations, D form, immediate operands only
#define PERFSCORE_LATENCY_N2_HORIZONTAL_OPERATIONS_D_FORM_IMMEDIATE_OPERANDS_ONLY PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_HORIZONTAL_OPERATIONS_D_FORM_IMMEDIATE_OPERANDS_ONLY PERFSCORE_THROUGHPUT_2C

// Horizontal operations, D form, scalar, immediate operands)/ scalar operands only / immediate, scalar operands
#define PERFSCORE_LATENCY_N2_HORIZONTAL_OPERATIONS_D_FORM_SCALAR_IMMEDIATE_OPERANDS_SCALAR_OPERANDS_ONLY_IMMEDIATE_SCALAR_OPERANDS PERFSCORE_LATENCY_8C
#define PERFSCORE_THROUGHPUT_N2_HORIZONTAL_OPERATIONS_D_FORM_SCALAR_IMMEDIATE_OPERANDS_SCALAR_OPERANDS_ONLY_IMMEDIATE_SCALAR_OPERANDS PERFSCORE_THROUGHPUT_2C

// Logical
#define PERFSCORE_LATENCY_N2_LOGICAL PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_LOGICAL PERFSCORE_THROUGHPUT_2X

// Max/min, basic and pairwise
#define PERFSCORE_LATENCY_N2_MAX_MIN_BASIC_AND_PAIRWISE PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_MAX_MIN_BASIC_AND_PAIRWISE PERFSCORE_THROUGHPUT_2X

// Matching operations
#define PERFSCORE_LATENCY_N2_MATCHING_OPERATIONS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_MATCHING_OPERATIONS PERFSCORE_THROUGHPUT_1C

// Matrix multiply-accumulate
#define PERFSCORE_LATENCY_N2_MATRIX_MULTIPLY_ACCUMULATE PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_MATRIX_MULTIPLY_ACCUMULATE PERFSCORE_THROUGHPUT_2X

// Move prefix
#define PERFSCORE_LATENCY_N2_MOVE_PREFIX PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_MOVE_PREFIX PERFSCORE_THROUGHPUT_2X

// Multiply, B, H, S element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_B_H_S_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_B_H_S_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Multiply, D element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_D_ELEMENT_SIZE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_D_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Multiply long
#define PERFSCORE_LATENCY_N2_MULTIPLY_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_LONG PERFSCORE_THROUGHPUT_1C

// Multiply accumulate, B, H, S element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_ACCUMULATE_B_H_S_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_ACCUMULATE_B_H_S_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Multiply accumulate, D element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_ACCUMULATE_D_ELEMENT_SIZE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_ACCUMULATE_D_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Multiply accumulate long
#define PERFSCORE_LATENCY_N2_MULTIPLY_ACCUMULATE_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_ACCUMULATE_LONG PERFSCORE_THROUGHPUT_1C

// Multiply accumulate saturating doubling long regular
#define PERFSCORE_LATENCY_N2_MULTIPLY_ACCUMULATE_SATURATING_DOUBLING_LONG_REGULAR PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_ACCUMULATE_SATURATING_DOUBLING_LONG_REGULAR PERFSCORE_THROUGHPUT_1C

// Multiply saturating doubling high, B, H, S element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_DOUBLING_HIGH_B_H_S_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_DOUBLING_HIGH_B_H_S_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Multiply saturating doubling high, D element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_DOUBLING_HIGH_D_ELEMENT_SIZE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_DOUBLING_HIGH_D_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Multiply saturating doubling long
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_DOUBLING_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_DOUBLING_LONG PERFSCORE_THROUGHPUT_1C

// Multiply saturating rounding doubling regular/complex accumulate, B, H, S element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_ACCUMULATE_B_H_S_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_ACCUMULATE_B_H_S_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Multiply saturating rounding doubling regular/complex accumulate, D element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_ACCUMULATE_D_ELEMENT_SIZE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_ACCUMULATE_D_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Multiply saturating rounding doubling regular/complex, B, H, S element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_B_H_S_ELEMENT_SIZE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_B_H_S_ELEMENT_SIZE PERFSCORE_THROUGHPUT_1C

// Multiply saturating rounding doubling regular/complex, D element size
#define PERFSCORE_LATENCY_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_D_ELEMENT_SIZE PERFSCORE_LATENCY_5C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_SATURATING_ROUNDING_DOUBLING_REGULAR_COMPLEX_D_ELEMENT_SIZE PERFSCORE_THROUGHPUT_2C

// Multiply/multiply long, (8x8) polynomial
#define PERFSCORE_LATENCY_N2_MULTIPLY_MULTIPLY_LONG_8X8_POLYNOMIAL PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_MULTIPLY_MULTIPLY_LONG_8X8_POLYNOMIAL PERFSCORE_THROUGHPUT_1C

// Predicate counting, vector
#define PERFSCORE_LATENCY_N2_PREDICATE_COUNTING_VECTOR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_PREDICATE_COUNTING_VECTOR PERFSCORE_THROUGHPUT_2X

// Reciprocal estimate
#define PERFSCORE_LATENCY_N2_RECIPROCAL_ESTIMATE PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_RECIPROCAL_ESTIMATE PERFSCORE_THROUGHPUT_2C

// Reduction, arithmetic, B form
#define PERFSCORE_LATENCY_N2_REDUCTION_ARITHMETIC_B_FORM PERFSCORE_LATENCY_9C
#define PERFSCORE_THROUGHPUT_N2_REDUCTION_ARITHMETIC_B_FORM PERFSCORE_THROUGHPUT_2C

// Reduction, arithmetic, H form
#define PERFSCORE_LATENCY_N2_REDUCTION_ARITHMETIC_H_FORM PERFSCORE_LATENCY_8C
#define PERFSCORE_THROUGHPUT_N2_REDUCTION_ARITHMETIC_H_FORM PERFSCORE_THROUGHPUT_1_5C

// Reduction, arithmetic, S form
#define PERFSCORE_LATENCY_N2_REDUCTION_ARITHMETIC_S_FORM PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_REDUCTION_ARITHMETIC_S_FORM PERFSCORE_THROUGHPUT_1C

// Reduction, arithmetic, D form
#define PERFSCORE_LATENCY_N2_REDUCTION_ARITHMETIC_D_FORM PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_REDUCTION_ARITHMETIC_D_FORM PERFSCORE_THROUGHPUT_1C

// Reduction, logical
#define PERFSCORE_LATENCY_N2_REDUCTION_LOGICAL PERFSCORE_LATENCY_6C
#define PERFSCORE_THROUGHPUT_N2_REDUCTION_LOGICAL PERFSCORE_THROUGHPUT_1C

// Reverse, vector
#define PERFSCORE_LATENCY_N2_REVERSE_VECTOR PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_REVERSE_VECTOR PERFSCORE_THROUGHPUT_2X

// Select, vector form
#define PERFSCORE_LATENCY_N2_SELECT_VECTOR_FORM PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SELECT_VECTOR_FORM PERFSCORE_THROUGHPUT_2X

// Table lookup
#define PERFSCORE_LATENCY_N2_TABLE_LOOKUP PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_TABLE_LOOKUP PERFSCORE_THROUGHPUT_2X

// Table lookup extension
#define PERFSCORE_LATENCY_N2_TABLE_LOOKUP_EXTENSION PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_TABLE_LOOKUP_EXTENSION PERFSCORE_THROUGHPUT_2X

// Transpose, vector form
#define PERFSCORE_LATENCY_N2_TRANSPOSE_VECTOR_FORM PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_TRANSPOSE_VECTOR_FORM PERFSCORE_THROUGHPUT_2X

// Unpack and extend
#define PERFSCORE_LATENCY_N2_UNPACK_AND_EXTEND PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_UNPACK_AND_EXTEND PERFSCORE_THROUGHPUT_2X

// Zip/unzip
#define PERFSCORE_LATENCY_N2_ZIP_UNZIP PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ZIP_UNZIP PERFSCORE_THROUGHPUT_2X

// Arithmetic, absolute diff
#define PERFSCORE_LATENCY_N2_ARITHMETIC_ABSOLUTE_DIFF PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_ABSOLUTE_DIFF PERFSCORE_THROUGHPUT_2X

// Arithmetic, absolute diff accum
#define PERFSCORE_LATENCY_N2_ARITHMETIC_ABSOLUTE_DIFF_ACCUM PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_ABSOLUTE_DIFF_ACCUM PERFSCORE_THROUGHPUT_1C

// Arithmetic, absolute diff accum long
#define PERFSCORE_LATENCY_N2_ARITHMETIC_ABSOLUTE_DIFF_ACCUM_LONG PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_ABSOLUTE_DIFF_ACCUM_LONG PERFSCORE_THROUGHPUT_1C

// Arithmetic, absolute diff long
#define PERFSCORE_LATENCY_N2_ARITHMETIC_ABSOLUTE_DIFF_LONG PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_ARITHMETIC_ABSOLUTE_DIFF_LONG PERFSCORE_THROUGHPUT_2X

// CRC checksum ops
#define PERFSCORE_LATENCY_N2_CRC_CHECKSUM_OPS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CRC_CHECKSUM_OPS PERFSCORE_THROUGHPUT_1C

// Crypto AES ops
#define PERFSCORE_LATENCY_N2_CRYPTO_AES_OPS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CRYPTO_AES_OPS PERFSCORE_THROUGHPUT_2X

// Crypto SHA3 ops
#define PERFSCORE_LATENCY_N2_CRYPTO_SHA3_OPS PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_CRYPTO_SHA3_OPS PERFSCORE_THROUGHPUT_1C

// Crypto SM4 ops
#define PERFSCORE_LATENCY_N2_CRYPTO_SM4_OPS PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_CRYPTO_SM4_OPS PERFSCORE_THROUGHPUT_1C

// Read first fault register, unpredicated
#define PERFSCORE_LATENCY_N2_READ_FIRST_FAULT_REGISTER_UNPREDICATED PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_READ_FIRST_FAULT_REGISTER_UNPREDICATED PERFSCORE_THROUGHPUT_1C

// Read first fault register, predicated
#define PERFSCORE_LATENCY_N2_READ_FIRST_FAULT_REGISTER_PREDICATED PERFSCORE_LATENCY_3C
#define PERFSCORE_THROUGHPUT_N2_READ_FIRST_FAULT_REGISTER_PREDICATED PERFSCORE_THROUGHPUT_1C

// Read first fault register and set flags
#define PERFSCORE_LATENCY_N2_READ_FIRST_FAULT_REGISTER_AND_SET_FLAGS PERFSCORE_LATENCY_4C
#define PERFSCORE_THROUGHPUT_N2_READ_FIRST_FAULT_REGISTER_AND_SET_FLAGS PERFSCORE_THROUGHPUT_2C

// Set first fault register
#define PERFSCORE_LATENCY_N2_SET_FIRST_FAULT_REGISTER PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_SET_FIRST_FAULT_REGISTER PERFSCORE_THROUGHPUT_1C

// Write to first fault register
#define PERFSCORE_LATENCY_N2_WRITE_TO_FIRST_FAULT_REGISTER PERFSCORE_LATENCY_2C
#define PERFSCORE_THROUGHPUT_N2_WRITE_TO_FIRST_FAULT_REGISTER PERFSCORE_THROUGHPUT_1C

// Unsupported
#define PERFSCORE_LATENCY_N2_UNSUPPORTED PERFSCORE_LATENCY_140C
#define PERFSCORE_THROUGHPUT_N2_UNSUPPORTED PERFSCORE_THROUGHPUT_140C

