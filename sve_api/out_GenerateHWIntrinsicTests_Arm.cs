
// Sve stores
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_float",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_double",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_sbyte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_short",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_int",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_long",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_byte",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ushort",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_uint",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ulong",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_float",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Single_Single",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_double",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Double_Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_sbyte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "SByte_SByte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_short",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Int16_Int16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_int",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Int32_Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_long",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Int64_Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_byte",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Byte_Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ushort",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "UInt16_UInt16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_uint",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "UInt32_UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ulong",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "UInt64_UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_float",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Single_Single_Single",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_double",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Double_Double_Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_sbyte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "SByte_SByte_SByte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_short",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Int16_Int16_Int16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_int",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Int32_Int32_Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_long",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Int64_Int64_Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_byte",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Byte_Byte_Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ushort",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "UInt16_UInt16_UInt16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_uint",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "UInt32_UInt32_UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ulong",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "UInt64_UInt64_UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_float",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Single_Single_Single_Single",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                   ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_double",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Double_Double_Double_Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                   ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_sbyte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "SByte_SByte_SByte_SByte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_short",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Int16_Int16_Int16_Int16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_int",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Int32_Int32_Int32_Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_long",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Int64_Int64_Int64_Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_byte",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Byte_Byte_Byte_Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                             ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ushort",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "UInt16_UInt16_UInt16_UInt16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                   ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_uint",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "UInt32_UInt32_UInt32_UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                   ["ValidateIterResult"] = "false",}),
    ("SveStore.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Store_ulong",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "UInt64_UInt64_UInt64_UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                   ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_short",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_int",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_long",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_ushort",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_uint",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_ulong",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_int",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_long",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_uint",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_ulong",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_long",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNarrowing.template",        new Dictionary<string, string> { ["TestName"] = "Sve_StoreNarrowing_ulong",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNarrowing",                                                                                        ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_float",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_double",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_sbyte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_short",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_int",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_long",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_byte",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_ushort",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveStoreNonTemporal.template",      new Dictionary<string, string> { ["TestName"] = "Sve_StoreNonTemporal_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),


// Sve scatterstores
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_float_uint",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_int_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_uint_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_double_ulong",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_long_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_ulong_ulong",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_float_int",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Single",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetSingle()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_int_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_uint_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_float_uint",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Single",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetSingle()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_int_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_uint_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_double_long",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetDouble()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_long_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_ulong_long",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_double_ulong",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetDouble()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_long_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Scatter_ulong_ulong",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter",                                                                                               ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve_Scatter16BitNarrowing_int_uint",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter16BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve_Scatter16BitNarrowing_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter16BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve_Scatter16BitNarrowing_long_ulong",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter16BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve_Scatter16BitNarrowing_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_int",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_uint_int",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_int_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_uint",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_long",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_ulong_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_long_ulong",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_ulong",                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_int",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_uint_int",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_int_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_uint",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_long",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_ulong_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_long_ulong",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter16BitWithByteOffsetsNarrowing_ulong",                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve_Scatter32BitNarrowing_long_ulong",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter32BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve_Scatter32BitNarrowing_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_long",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_ulong_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_long_ulong",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_ulong",                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_long",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_ulong_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_long_ulong",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter32BitWithByteOffsetsNarrowing_ulong",                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitNarrowing.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Scatter8BitNarrowing_int_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter8BitNarrowing.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Scatter8BitNarrowing_uint",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter8BitNarrowing.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Scatter8BitNarrowing_long_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveScatter8BitNarrowing.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Scatter8BitNarrowing_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_int",                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_uint_int",                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_int_uint",                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_long",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_ulong_long",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_long_ulong",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("SveScatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve_Scatter8BitWithByteOffsetsNarrowing_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),


// Sve maths
    ("SveAbs.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Abs_float",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAbs.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Abs_double",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAbs.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Abs_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbs.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Abs_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbs.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Abs_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbs.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Abs_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_float",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_double",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_sbyte",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_short",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_int",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_long",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_byte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_ushort",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_uint",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteDifference.template",    new Dictionary<string, string> { ["TestName"] = "Sve_AbsoluteDifference_ulong",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_float",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_double",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_byte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_ushort",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_uint",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAdd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Add_ulong",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_float",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_double",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_long_sbyte",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_long_short",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_long_int",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_long",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_ulong_byte",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_ulong_ushort",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_ulong_uint",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAddAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AddAcross_ulong",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_sbyte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_short",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_long",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_byte",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_ushort",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddSaturate.template",           new Dictionary<string, string> { ["TestName"] = "Sve_AddSaturate_ulong",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDivide.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Divide_float",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDivide.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Divide_double",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDivide.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Divide_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveDivide.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Divide_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveDivide.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Divide_uint",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDivide.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Divide_ulong",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDotProduct.template",            new Dictionary<string, string> { ["TestName"] = "Sve_DotProduct_int_sbyte",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProduct",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveDotProduct.template",            new Dictionary<string, string> { ["TestName"] = "Sve_DotProduct_long_short",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProduct",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveDotProduct.template",            new Dictionary<string, string> { ["TestName"] = "Sve_DotProduct_uint_byte",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProduct",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveDotProduct.template",            new Dictionary<string, string> { ["TestName"] = "Sve_DotProduct_ulong_ushort",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProduct",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveDotProductBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_DotProductBySelectedScalar_int_sbyte",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProductBySelectedScalar",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                      ["ValidateIterResult"] = "false",}),
    ("SveDotProductBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_DotProductBySelectedScalar_long_short",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProductBySelectedScalar",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                      ["ValidateIterResult"] = "false",}),
    ("SveDotProductBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_DotProductBySelectedScalar_uint_byte",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProductBySelectedScalar",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetByte()",["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                        ["ValidateIterResult"] = "false",}),
    ("SveDotProductBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_DotProductBySelectedScalar_ulong_ushort",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DotProductBySelectedScalar",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                  ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplyAdd.template",      new Dictionary<string, string> { ["TestName"] = "Sve_FusedMultiplyAdd_float",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplyAdd",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplyAdd.template",      new Dictionary<string, string> { ["TestName"] = "Sve_FusedMultiplyAdd_double",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplyAdd",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplyAddBySelectedScalar_float",                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplyAddBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                  ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplyAddBySelectedScalar_double",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplyAddBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                  ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplyAddNegated.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplyAddNegated_float",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplyAddNegated",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplyAddNegated.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplyAddNegated_double",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplyAddNegated",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplySubtract.template", new Dictionary<string, string> { ["TestName"] = "Sve_FusedMultiplySubtract_float",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplySubtract",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplySubtract.template", new Dictionary<string, string> { ["TestName"] = "Sve_FusedMultiplySubtract_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplySubtract",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplySubtractBySelectedScalar_float",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplySubtractBySelectedScalar",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                  ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplySubtractBySelectedScalar_double",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplySubtractBySelectedScalar",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                  ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplySubtractNegated.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplySubtractNegated_float",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplySubtractNegated",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveFusedMultiplySubtractNegated.template",new Dictionary<string, string> {["TestName"] = "Sve_FusedMultiplySubtractNegated_double",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FusedMultiplySubtractNegated",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_float",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_double",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_byte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_ushort",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_uint",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMax.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Max_ulong",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_float",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_double",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_sbyte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_short",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_int",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_long",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_byte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_ushort",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_uint",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMaxAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxAcross_ulong",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMaxNumber.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxNumber_float",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxNumber",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxNumber.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MaxNumber_double",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxNumber",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMaxNumberAcross.template",       new Dictionary<string, string> { ["TestName"] = "Sve_MaxNumberAcross_float",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxNumberAcross",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMaxNumberAcross.template",       new Dictionary<string, string> { ["TestName"] = "Sve_MaxNumberAcross_double",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MaxNumberAcross",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_float",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_double",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_byte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_ushort",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_uint",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMin.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Min_ulong",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_float",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_double",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_sbyte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_short",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_int",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_long",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_byte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_ushort",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_uint",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMinAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinAcross_ulong",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMinNumber.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinNumber_float",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinNumber",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinNumber.template",             new Dictionary<string, string> { ["TestName"] = "Sve_MinNumber_double",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinNumber",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMinNumberAcross.template",       new Dictionary<string, string> { ["TestName"] = "Sve_MinNumberAcross_float",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinNumberAcross",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMinNumberAcross.template",       new Dictionary<string, string> { ["TestName"] = "Sve_MinNumberAcross_double",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MinNumberAcross",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_float",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_double",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_sbyte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_short",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_int",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_long",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_byte",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_ushort",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_uint",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiply.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Multiply_ulong",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_sbyte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_short",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_long",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_byte",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_ushort",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyAdd_ulong",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAdd",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveMultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_MultiplyBySelectedScalar_float",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_MultiplyBySelectedScalar_double",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiplyExtended.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyExtended_float",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyExtended",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiplyExtended.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplyExtended_double",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyExtended",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_sbyte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_short",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_int",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_long",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_byte",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_ushort",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveMultiplySubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve_MultiplySubtract_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplySubtract",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveNegate.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Negate_float",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveNegate.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Negate_double",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveNegate.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Negate_sbyte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNegate.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Negate_short",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNegate.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Negate_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNegate.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Negate_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtend16.template",          new Dictionary<string, string> { ["TestName"] = "Sve_SignExtend16_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtend16",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtend16.template",          new Dictionary<string, string> { ["TestName"] = "Sve_SignExtend16_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtend16",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtend32.template",          new Dictionary<string, string> { ["TestName"] = "Sve_SignExtend32_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtend32",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtend8.template",           new Dictionary<string, string> { ["TestName"] = "Sve_SignExtend8_short",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtend8",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtend8.template",           new Dictionary<string, string> { ["TestName"] = "Sve_SignExtend8_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtend8",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtend8.template",           new Dictionary<string, string> { ["TestName"] = "Sve_SignExtend8_long",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtend8",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtendWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve_SignExtendWideningLower_short_sbyte",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtendWideningLower",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtendWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve_SignExtendWideningLower_int_short",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtendWideningLower",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtendWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve_SignExtendWideningLower_long_int",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtendWideningLower",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtendWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve_SignExtendWideningUpper_short_sbyte",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtendWideningUpper",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtendWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve_SignExtendWideningUpper_int_short",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtendWideningUpper",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSignExtendWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve_SignExtendWideningUpper_long_int",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SignExtendWideningUpper",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_float",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_double",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_sbyte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_short",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_int",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_long",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_byte",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_ushort",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_uint",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtract.template",              new Dictionary<string, string> { ["TestName"] = "Sve_Subtract_ulong",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_sbyte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_short",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_int",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_long",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_byte",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_ushort",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSubtractSaturate.template",      new Dictionary<string, string> { ["TestName"] = "Sve_SubtractSaturate_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZeroExtend16.template",          new Dictionary<string, string> { ["TestName"] = "Sve_ZeroExtend16_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtend16",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtend16.template",          new Dictionary<string, string> { ["TestName"] = "Sve_ZeroExtend16_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtend16",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtend32.template",          new Dictionary<string, string> { ["TestName"] = "Sve_ZeroExtend32_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtend32",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtend8.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ZeroExtend8_ushort",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtend8",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtend8.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ZeroExtend8_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtend8",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtend8.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ZeroExtend8_ulong",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtend8",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtendWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve_ZeroExtendWideningLower_ushort_byte",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtendWideningLower",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZeroExtendWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve_ZeroExtendWideningLower_uint_ushort",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtendWideningLower",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtendWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve_ZeroExtendWideningLower_ulong_uint",                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtendWideningLower",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtendWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve_ZeroExtendWideningUpper_ushort_byte",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtendWideningUpper",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZeroExtendWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve_ZeroExtendWideningUpper_uint_ushort",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtendWideningUpper",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveZeroExtendWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve_ZeroExtendWideningUpper_ulong_uint",                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZeroExtendWideningUpper",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),


// Sve mask
    ("SveAbsoluteCompareGreaterThan.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareGreaterThan_float",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareGreaterThan",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareGreaterThan.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareGreaterThan_double",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareGreaterThan",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareGreaterThanOrEqual_float",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareGreaterThanOrEqual",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareGreaterThanOrEqual_double",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareGreaterThanOrEqual",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareLessThan.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareLessThan_float",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareLessThan",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareLessThan.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareLessThan_double",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareLessThan",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareLessThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareLessThanOrEqual_float",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareLessThanOrEqual",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAbsoluteCompareLessThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_AbsoluteCompareLessThanOrEqual_double",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AbsoluteCompareLessThanOrEqual",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompact.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Compact_float",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compact",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompact.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Compact_double",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compact",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompact.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Compact_int",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compact",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompact.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Compact_long",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compact",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompact.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Compact_uint",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compact",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompact.template",               new Dictionary<string, string> { ["TestName"] = "Sve_Compact_ulong",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compact",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_float",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_double",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_sbyte_long",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_short_long",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareEqual.template",          new Dictionary<string, string> { ["TestName"] = "Sve_CompareEqual_int_long",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_float",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_double",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_sbyte",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_short",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_int",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_long",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_byte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_ushort",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_uint",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_ulong",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_sbyte_long",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_short_long",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_int_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_byte_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_ushort_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThan.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CompareGreaterThan_uint_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_float",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_double",                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_sbyte",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_short",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_int",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_long",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_byte",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_ushort",                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_uint",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_ulong",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_sbyte_long",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_short_long",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_int_long",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_byte_ulong",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_ushort_ulong",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "Sve_CompareGreaterThanOrEqual_uint_ulong",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_float",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_double",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_sbyte",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_short",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_int",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_long",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_byte",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_ushort",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_uint",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_ulong",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_sbyte_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_short_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_int_long",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_byte_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_ushort_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThan.template",       new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThan_uint_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_float",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_double",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_sbyte",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_short",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_int",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_byte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_ushort",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_uint",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_sbyte_long",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_short_long",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_int_long",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_byte_ulong",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_ushort_ulong",                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareLessThanOrEqual.template",new Dictionary<string, string> { ["TestName"] = "Sve_CompareLessThanOrEqual_uint_ulong",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_float",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_double",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_sbyte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_short",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_int",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_long",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_byte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_ushort",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_sbyte_long",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_short_long",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareNotEqualTo.template",     new Dictionary<string, string> { ["TestName"] = "Sve_CompareNotEqualTo_int_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompareUnordered.template",      new Dictionary<string, string> { ["TestName"] = "Sve_CompareUnordered_float",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareUnordered",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompareUnordered.template",      new Dictionary<string, string> { ["TestName"] = "Sve_CompareUnordered_double",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CompareUnordered",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_float",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_float",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_double",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_double",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_sbyte",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_sbyte",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_short",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_short",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_int",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_int",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_long",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_long",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_byte",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_byte",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_ushort",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_ushort",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_uint",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_uint",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_ulong",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElement_ulong",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_float",           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_double",          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_sbyte",           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_short",           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_int",             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_long",            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_byte",            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_ushort",          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_uint",            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractAfterLastActiveElementAndReplicate_ulong",           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_float",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_float",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_double",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_double",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_sbyte",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_sbyte",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_short",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_short",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_int",                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_int",                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_long",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_long",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_byte",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_byte",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_ushort",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_ushort",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElement_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_float",                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_double",                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_sbyte",                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_short",                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_int",                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_long",                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_byte",                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_ushort",                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_uint",                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "Sve_ConditionalExtractLastActiveElementAndReplicate_ulong",                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_float",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_double",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_sbyte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_short",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_int",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_long",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_byte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_ushort",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveConditionalSelect.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ConditionalSelect_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_sbyte",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_short",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_int",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_long",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_byte",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_ushort",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_uint",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterMask.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakAfterMask_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterMask",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_sbyte",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_short",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_int",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_long",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_byte",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_ushort",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakAfterPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakAfterPropagateMask_ulong",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakAfterPropagateMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_sbyte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_short",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_byte",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_ushort",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforeMask.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateBreakBeforeMask_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforeMask",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_sbyte",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_short",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_int",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_long",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_byte",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_ushort",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakBeforePropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakBeforePropagateMask_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakBeforePropagateMask",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_sbyte",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_short",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_int",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_long",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_byte",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_ushort",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_uint",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateBreakPropagateMask.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateBreakPropagateMask_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateBreakPropagateMask",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskByte.template",   new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskByte_byte",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskByte",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                                                                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskDouble.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskDouble_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskDouble",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskInt16.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskInt16_short",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskInt16",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskInt32.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskInt32_int",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskInt32",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskInt64.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskInt64_long",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskInt64",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskSByte.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskSByte_sbyte",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskSByte",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskSingle.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskSingle_float",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskSingle",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskUInt16.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskUInt16_ushort",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskUInt16",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskUInt32.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskUInt32_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskUInt32",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateFalseMaskUInt64.template", new Dictionary<string, string> { ["TestName"] = "Sve_CreateFalseMaskUInt64_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateFalseMaskUInt64",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_sbyte",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_short",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_int",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_long",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_byte",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_ushort",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_uint",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForFirstActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForFirstActiveElement_ulong",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForFirstActiveElement",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForNextActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForNextActiveElement_byte",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForNextActiveElement",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForNextActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForNextActiveElement_ushort",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForNextActiveElement",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForNextActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForNextActiveElement_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForNextActiveElement",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateMaskForNextActiveElement.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateMaskForNextActiveElement_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateMaskForNextActiveElement",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskByte.template",    new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskByte_byte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskByte",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskDouble.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskDouble_double",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskDouble",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskInt16.template",   new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskInt16_short",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskInt16",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                    ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskInt32.template",   new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskInt32_int",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskInt32",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskInt64.template",   new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskInt64_long",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskInt64",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskSByte.template",   new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskSByte_sbyte",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskSByte",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",                                    ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskSingle.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskSingle_float",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskSingle",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskUInt16.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskUInt16_ushort",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskUInt16",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskUInt32.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskUInt32_uint",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskUInt32",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateTrueMaskUInt64.template",  new Dictionary<string, string> { ["TestName"] = "Sve_CreateTrueMaskUInt64_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateTrueMaskUInt64",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask16Bit_ushort",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask16Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask16Bit_ushort",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask16Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask16Bit_ushort",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask16Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask16Bit_ushort",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask16Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask32Bit_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask32Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask32Bit_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask32Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask32Bit_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask32Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask32Bit_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask32Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask64Bit_ulong",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask64Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask64Bit_ulong",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask64Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask64Bit_ulong",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask64Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask64Bit_ulong",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask64Bit",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask8Bit_byte",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask8Bit",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask8Bit_byte",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask8Bit",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask8Bit_byte",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask8Bit",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanMask8Bit_byte",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanMask8Bit",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask16Bit_ushort",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask16Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask16Bit_ushort",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask16Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask16Bit_ushort",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask16Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask16Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask16Bit_ushort",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask16Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask32Bit_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask32Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask32Bit_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask32Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask32Bit_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask32Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask32Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask32Bit_uint",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask32Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask64Bit_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask64Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask64Bit_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask64Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask64Bit_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask64Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask64Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask64Bit_ulong",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask64Bit",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask8Bit_byte",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask8Bit",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask8Bit_byte",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask8Bit",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask8Bit_byte",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask8Bit",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCreateWhileLessThanOrEqualMask8Bit.template",new Dictionary<string, string> {["TestName"] = "Sve_CreateWhileLessThanOrEqualMask8Bit_byte",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "CreateWhileLessThanOrEqualMask8Bit",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_float",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_double",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_sbyte",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_short",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_int",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_byte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_ushort",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_uint",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastScalar.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastScalar_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_float",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_double",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_sbyte",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_short",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_int",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_byte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_ushort",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_uint",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractAfterLastVector.template",new Dictionary<string, string> { ["TestName"] = "Sve_ExtractAfterLastVector_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_float",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_double",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_sbyte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_short",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_int",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_long",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_byte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_ushort",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastScalar.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastScalar_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_float",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_double",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_sbyte",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_short",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_int",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_long",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_byte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_ushort",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractLastVector.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ExtractLastVector_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_float",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_double",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_sbyte",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_short",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_int",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_long",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_byte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_ushort",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_uint",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveExtractVector.template",         new Dictionary<string, string> { ["TestName"] = "Sve_ExtractVector_ulong",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_sbyte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_short",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_long",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_byte",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_ushort",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestAnyTrue.template",           new Dictionary<string, string> { ["TestName"] = "Sve_TestAnyTrue_ulong",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestAnyTrue",                                                                                           ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_sbyte",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_short",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_int",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_long",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_byte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_ushort",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_uint",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestFirstTrue.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TestFirstTrue_ulong",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestFirstTrue",                                                                                         ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTestLastTrue.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TestLastTrue_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TestLastTrue",                                                                                          ["RetBaseType"] = "bool",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// Sve loads
    ("SveCompute16BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute16BitAddresses_uint_int",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute16BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute16BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute16BitAddresses_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute16BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute16BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute16BitAddresses_ulong_long",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute16BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute16BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute16BitAddresses_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute16BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute32BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute32BitAddresses_uint_int",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute32BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute32BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute32BitAddresses_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute32BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute32BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute32BitAddresses_ulong_long",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute32BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute32BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute32BitAddresses_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute32BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute64BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute64BitAddresses_uint_int",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute64BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute64BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute64BitAddresses_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute64BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute64BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute64BitAddresses_ulong_long",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute64BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute64BitAddresses.template", new Dictionary<string, string> { ["TestName"] = "Sve_Compute64BitAddresses_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute64BitAddresses",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute8BitAddresses.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Compute8BitAddresses_uint_int",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute8BitAddresses",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute8BitAddresses.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Compute8BitAddresses_uint",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute8BitAddresses",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveCompute8BitAddresses.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Compute8BitAddresses_ulong_long",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute8BitAddresses",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveCompute8BitAddresses.template",  new Dictionary<string, string> { ["TestName"] = "Sve_Compute8BitAddresses_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Compute8BitAddresses",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_float",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_double",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_sbyte",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_short",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_int",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_long",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_byte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_ushort",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_uint",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector.template",            new Dictionary<string, string> { ["TestName"] = "Sve_LoadVector_ulong",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_float",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_double",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_sbyte",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_short",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_int",                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_long",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_byte",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_ushort",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_uint",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVector128AndReplicateToVector_ulong",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteNonFaultingZeroExtendToInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteNonFaultingZeroExtendToInt16_short",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteNonFaultingZeroExtendToInt16",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteNonFaultingZeroExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteNonFaultingZeroExtendToInt32_int",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteNonFaultingZeroExtendToInt32",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteNonFaultingZeroExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteNonFaultingZeroExtendToInt64_long",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteNonFaultingZeroExtendToInt64",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteNonFaultingZeroExtendToUInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteNonFaultingZeroExtendToUInt16_ushort",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteNonFaultingZeroExtendToUInt16",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteNonFaultingZeroExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteNonFaultingZeroExtendToUInt32_uint",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteNonFaultingZeroExtendToUInt32",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteNonFaultingZeroExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteNonFaultingZeroExtendToUInt64_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteNonFaultingZeroExtendToUInt64",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendToInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendToInt16_short",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendToInt16",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendToInt32_int",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendToInt32",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendToInt64_long",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendToInt64",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendToUInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendToUInt16_ushort",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendToUInt16",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendToUInt32_uint",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendToUInt32",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendToUInt64_ulong",                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendToUInt64",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16NonFaultingSignExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16NonFaultingSignExtendToInt32_int",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16NonFaultingSignExtendToInt32",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16NonFaultingSignExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16NonFaultingSignExtendToInt64_long",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16NonFaultingSignExtendToInt64",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16NonFaultingSignExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16NonFaultingSignExtendToUInt32_uint",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16NonFaultingSignExtendToUInt32",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16NonFaultingSignExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16NonFaultingSignExtendToUInt64_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16NonFaultingSignExtendToUInt64",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendToInt32_int",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendToInt32",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendToInt64_long",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendToInt64",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendToUInt32_uint",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendToUInt32",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendToUInt64_ulong",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendToUInt64",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt32NonFaultingSignExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt32NonFaultingSignExtendToInt64_long",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt32NonFaultingSignExtendToInt64",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt32NonFaultingSignExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt32NonFaultingSignExtendToUInt64_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt32NonFaultingSignExtendToUInt64",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt32SignExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt32SignExtendToInt64_long",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt32SignExtendToInt64",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt32SignExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt32SignExtendToUInt64_ulong",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt32SignExtendToUInt64",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_float",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",                                   ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",                                   ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_sbyte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",                                    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_short",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_byte",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_ushort",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonFaulting.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonFaulting_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_float",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_sbyte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_short",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_byte",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_ushort",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorNonTemporal.template", new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorNonTemporal_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteNonFaultingSignExtendToInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteNonFaultingSignExtendToInt16_short",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteNonFaultingSignExtendToInt16",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteNonFaultingSignExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteNonFaultingSignExtendToInt32_int",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteNonFaultingSignExtendToInt32",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteNonFaultingSignExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteNonFaultingSignExtendToInt64_long",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteNonFaultingSignExtendToInt64",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteNonFaultingSignExtendToUInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteNonFaultingSignExtendToUInt16_ushort",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteNonFaultingSignExtendToUInt16",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteNonFaultingSignExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteNonFaultingSignExtendToUInt32_uint",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteNonFaultingSignExtendToUInt32",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteNonFaultingSignExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteNonFaultingSignExtendToUInt64_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteNonFaultingSignExtendToUInt64",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendToInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendToInt16_short",                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendToInt16",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendToInt32_int",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendToInt32",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendToInt64_long",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendToInt64",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendToUInt16.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendToUInt16_ushort",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendToUInt16",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendToUInt32_uint",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendToUInt32",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendToUInt64_ulong",                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendToUInt64",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16NonFaultingZeroExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16NonFaultingZeroExtendToInt32_int",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16NonFaultingZeroExtendToInt32",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16NonFaultingZeroExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16NonFaultingZeroExtendToInt64_long",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16NonFaultingZeroExtendToInt64",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16NonFaultingZeroExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16NonFaultingZeroExtendToUInt32_uint",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16NonFaultingZeroExtendToUInt32",                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16NonFaultingZeroExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16NonFaultingZeroExtendToUInt64_ulong",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16NonFaultingZeroExtendToUInt64",                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendToInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendToInt32_int",                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendToInt32",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendToInt64_long",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendToInt64",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendToUInt32.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendToUInt32_uint",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendToUInt32",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendToUInt64_ulong",                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendToUInt64",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt32NonFaultingZeroExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt32NonFaultingZeroExtendToInt64_long",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt32NonFaultingZeroExtendToInt64",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt32NonFaultingZeroExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt32NonFaultingZeroExtendToUInt64_ulong",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt32NonFaultingZeroExtendToUInt64",                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt32ZeroExtendToInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt32ZeroExtendToInt64_long",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt32ZeroExtendToInt64",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt32ZeroExtendToUInt64.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt32ZeroExtendToUInt64_ulong",                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt32ZeroExtendToUInt64",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_float",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Single_Single",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Single",                              ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_double",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Double_Double",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Double",                              ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "SByte_SByte",["Op1VectorType"] = "Vector",["Op1BaseType"] = "SByte",                                 ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Int16_Int16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int16",                                 ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Int32_Int32",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int32",                                 ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Int64_Int64",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int64",                                 ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Byte_Byte",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "UInt16_UInt16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt16",                              ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "UInt32_UInt32",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt32",                              ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx2.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx2_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "UInt64_UInt64",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt64",                              ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_float",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Single_Single_Single",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Single",                ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_double",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Double_Double_Double",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Double",                ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "SByte_SByte_SByte",["Op1VectorType"] = "Vector",["Op1BaseType"] = "SByte",                    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Int16_Int16_Int16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int16",                    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Int32_Int32_Int32",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int32",                    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Int64_Int64_Int64",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int64",                    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Byte_Byte_Byte",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Byte",                        ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "UInt16_UInt16_UInt16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt16",                ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "UInt32_UInt32_UInt32",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt32",                ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx3.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx3_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "UInt64_UInt64_UInt64",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt64",                ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_float",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Single_Single_Single_Single",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Single",  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_double",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Double_Double_Double_Double",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Double",  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "SByte_SByte_SByte_SByte",["Op1VectorType"] = "Vector",["Op1BaseType"] = "SByte",       ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Int16_Int16_Int16_Int16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int16",       ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Int32_Int32_Int32_Int32",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int32",       ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Int64_Int64_Int64_Int64",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Int64",       ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Byte_Byte_Byte_Byte",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Byte",            ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "UInt16_UInt16_UInt16_UInt16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt16",  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "UInt32_UInt32_UInt32_UInt32",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt32",  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorx4.template",          new Dictionary<string, string> { ["TestName"] = "Sve_LoadVectorx4_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "UInt64_UInt64_UInt64_UInt64",["Op1VectorType"] = "Vector",["Op1BaseType"] = "UInt64",  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SvePrefetchBytes.template",         new Dictionary<string, string> { ["TestName"] = "Sve_PrefetchBytes_byte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PrefetchBytes",                                                                                         ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "void",                                    ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SvePrefetchInt16.template",         new Dictionary<string, string> { ["TestName"] = "Sve_PrefetchInt16_ushort",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PrefetchInt16",                                                                                         ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "void",                                    ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                ["ValidateIterResult"] = "false",}),
    ("SvePrefetchInt32.template",         new Dictionary<string, string> { ["TestName"] = "Sve_PrefetchInt32_uint",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PrefetchInt32",                                                                                         ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "void",                                    ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                ["ValidateIterResult"] = "false",}),
    ("SvePrefetchInt64.template",         new Dictionary<string, string> { ["TestName"] = "Sve_PrefetchInt64_ulong",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PrefetchInt64",                                                                                         ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "void",                                    ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                ["ValidateIterResult"] = "false",}),


// Sve gatherloads
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_ushort_uint",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",  ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_short_uint",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_ushort_ulong",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",  ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_short_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_ushort_int",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_short_int",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_ushort_uint",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_short_uint",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_ushort_long",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_short_long",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_ushort_ulong",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch16Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch16Bit_short_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch16Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_uint_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",  ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_int_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_uint_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",  ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_int_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_uint_int",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_int_int",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_uint_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_int_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_uint_long",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_int_long",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_uint_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch32Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch32Bit_int_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch32Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_ulong_uint",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",  ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_long_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_ulong_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",  ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_long_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_ulong_int",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_long_int",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_ulong_uint",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_long_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_ulong_long",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_long_long",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_ulong_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch64Bit.template",   new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch64Bit_long_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch64Bit",                                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_byte_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",    ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_sbyte_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_byte_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",    ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_sbyte_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",   ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_byte_int",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_sbyte_int",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_byte_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_sbyte_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_byte_long",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_sbyte_long",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_byte_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherPrefetch8Bit.template",    new Dictionary<string, string> { ["TestName"] = "Sve_GatherPrefetch8Bit_sbyte_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherPrefetch8Bit",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "void",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "SvePrefetchType",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_float_uint",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_int_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_uint_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_double_ulong",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_long_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_ulong_ulong",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_float_int",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_int_int",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_uint_int",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_float_uint",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_int_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_uint_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_double_long",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_long_long",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_ulong_long",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_double_ulong",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_long_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVector.template",          new Dictionary<string, string> { ["TestName"] = "Sve_GatherVector_ulong_ulong",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVector",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_int_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_uint_uint",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_long_ulong",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_ulong_ulong",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_int_int",                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_uint_int",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_int_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_uint_uint",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_long_long",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_ulong_long",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_long_ulong",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtend_ulong_ulong",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtend",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_int_int",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_uint_int",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_long_long",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_ulong_long",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtend_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_int_int",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_uint_int",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_int_uint",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_uint_uint",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_long_long",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_ulong_long",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_long_ulong",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtend_ulong_ulong",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_long_long",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_int_int",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_ulong_long",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_uint_int",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtend_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_long_long",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_int_int",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_ulong_long",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_uint_int",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_long_ulong",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_int_uint",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_ulong_ulong",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtend_uint_uint",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtend",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_int_int",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_uint_int",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_long_long",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_ulong_long",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtend_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_int_int",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_uint_int",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_int_uint",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_uint_uint",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_long_long",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_ulong_long",                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_long_ulong",                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtend_ulong_ulong",                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_int_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_uint_uint",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_long_ulong",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_ulong_ulong",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_int_int",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_uint_int",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_int_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_uint_uint",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_long_long",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_ulong_long",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_long_ulong",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtend_ulong_ulong",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_long_long",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_int_int",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_ulong_long",                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_uint_int",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_long_ulong",                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_int_uint",                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_ulong_ulong",                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtend_uint_uint",                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtend",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_long_ulong",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_int_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_ulong_ulong",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_uint_uint",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_long_long",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_int_int",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_ulong_long",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_uint_int",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_long_ulong",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_int_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_ulong_ulong",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtend.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtend_uint_uint",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtend",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_float_int",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_int_int",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_uint_int",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_float_uint",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_int_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_uint_uint",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_double_long",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_long_long",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_ulong_long",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_double_ulong",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_long_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsets.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsets_ulong_ulong",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsets",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),


// Sve fp
    ("SveAddRotateComplex.template",      new Dictionary<string, string> { ["TestName"] = "Sve_AddRotateComplex_float",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddRotateComplex.template",      new Dictionary<string, string> { ["TestName"] = "Sve_AddRotateComplex_double",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddSequentialAcross.template",   new Dictionary<string, string> { ["TestName"] = "Sve_AddSequentialAcross_float",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSequentialAcross",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAddSequentialAcross.template",   new Dictionary<string, string> { ["TestName"] = "Sve_AddSequentialAcross_double",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AddSequentialAcross",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveConvertToDouble.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToDouble_double_float",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToDouble",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToDouble.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToDouble_double_int",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToDouble",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveConvertToDouble.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToDouble_double_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToDouble",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveConvertToDouble.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToDouble_double_uint",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToDouble",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToDouble.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToDouble_double_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToDouble",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToInt32.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToInt32_int_float",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToInt32",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToInt32.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToInt32_int_double",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToInt32",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToInt64.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToInt64_long_float",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToInt64",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToInt64.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToInt64_long_double",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToInt64",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToSingle.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToSingle_float_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToSingle",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToSingle.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToSingle_float_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToSingle",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveConvertToSingle.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToSingle_float_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToSingle",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveConvertToSingle.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToSingle_float_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToSingle",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToSingle.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToSingle_float_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToSingle",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToUInt32.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToUInt32_uint_float",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToUInt32",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToUInt32.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToUInt32_uint_double",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToUInt32",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToUInt64.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToUInt64_ulong_float",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToUInt64",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveConvertToUInt64.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ConvertToUInt64_ulong_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ConvertToUInt64",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFloatingPointExponentialAccelerator.template",new Dictionary<string, string> {["TestName"] = "Sve_FloatingPointExponentialAccelerator_float_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FloatingPointExponentialAccelerator",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFloatingPointExponentialAccelerator.template",new Dictionary<string, string> {["TestName"] = "Sve_FloatingPointExponentialAccelerator_double_ulong",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "FloatingPointExponentialAccelerator",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve_MultiplyAddRotateComplex_float",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                  ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve_MultiplyAddRotateComplex_double",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                  ["ValidateIterResult"] = "false",}),
    ("SveMultiplyAddRotateComplexBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve_MultiplyAddRotateComplexBySelectedScalar_float",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "MultiplyAddRotateComplexBySelectedScalar",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single",["Op4BaseType"] = "Byte",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",["ValidateIterResult"] = "false",}),
    ("SveReciprocalEstimate.template",    new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalEstimate_float",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalEstimate",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReciprocalEstimate.template",    new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalEstimate_double",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalEstimate",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReciprocalExponent.template",    new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalExponent_float",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalExponent",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReciprocalExponent.template",    new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalExponent_double",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalExponent",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReciprocalSqrtEstimate.template",new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalSqrtEstimate_float",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalSqrtEstimate",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReciprocalSqrtEstimate.template",new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalSqrtEstimate_double",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalSqrtEstimate",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReciprocalSqrtStep.template",    new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalSqrtStep_float",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalSqrtStep",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReciprocalSqrtStep.template",    new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalSqrtStep_double",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalSqrtStep",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReciprocalStep.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalStep_float",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalStep",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReciprocalStep.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReciprocalStep_double",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReciprocalStep",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveRoundAwayFromZero.template",     new Dictionary<string, string> { ["TestName"] = "Sve_RoundAwayFromZero_float",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundAwayFromZero",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundAwayFromZero.template",     new Dictionary<string, string> { ["TestName"] = "Sve_RoundAwayFromZero_double",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundAwayFromZero",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToNearest.template",        new Dictionary<string, string> { ["TestName"] = "Sve_RoundToNearest_float",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToNearest",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToNearest.template",        new Dictionary<string, string> { ["TestName"] = "Sve_RoundToNearest_double",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToNearest",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToNegativeInfinity.template",new Dictionary<string, string> {["TestName"] = "Sve_RoundToNegativeInfinity_float",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToNegativeInfinity",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToNegativeInfinity.template",new Dictionary<string, string> {["TestName"] = "Sve_RoundToNegativeInfinity_double",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToNegativeInfinity",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToPositiveInfinity.template",new Dictionary<string, string> {["TestName"] = "Sve_RoundToPositiveInfinity_float",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToPositiveInfinity",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToPositiveInfinity.template",new Dictionary<string, string> {["TestName"] = "Sve_RoundToPositiveInfinity_double",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToPositiveInfinity",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToZero.template",           new Dictionary<string, string> { ["TestName"] = "Sve_RoundToZero_float",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToZero",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveRoundToZero.template",           new Dictionary<string, string> { ["TestName"] = "Sve_RoundToZero_double",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "RoundToZero",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveScale.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Scale_float_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scale",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveScale.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_Scale_double_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Scale",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSqrt.template",                  new Dictionary<string, string> { ["TestName"] = "Sve_Sqrt_float",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Sqrt",                                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveSqrt.template",                  new Dictionary<string, string> { ["TestName"] = "Sve_Sqrt_double",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Sqrt",                                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveTrigonometricMultiplyAddCoefficient.template",new Dictionary<string, string> {["TestName"] = "Sve_TrigonometricMultiplyAddCoefficient_float",                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TrigonometricMultiplyAddCoefficient",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTrigonometricMultiplyAddCoefficient.template",new Dictionary<string, string> {["TestName"] = "Sve_TrigonometricMultiplyAddCoefficient_double",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TrigonometricMultiplyAddCoefficient",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTrigonometricSelectCoefficient.template",new Dictionary<string, string> {["TestName"] = "Sve_TrigonometricSelectCoefficient_float_uint",                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TrigonometricSelectCoefficient",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTrigonometricSelectCoefficient.template",new Dictionary<string, string> {["TestName"] = "Sve_TrigonometricSelectCoefficient_double_ulong",                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TrigonometricSelectCoefficient",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTrigonometricStartingValue.template",new Dictionary<string, string> {["TestName"] = "Sve_TrigonometricStartingValue_float_uint",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TrigonometricStartingValue",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTrigonometricStartingValue.template",new Dictionary<string, string> {["TestName"] = "Sve_TrigonometricStartingValue_double_ulong",                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TrigonometricStartingValue",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// Sve firstfaulting
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_int_uint",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_uint_uint",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_long_ulong",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_ulong_ulong",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_int_int",                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_uint_int",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_int_uint",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_uint_uint",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_long_long",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_ulong_long",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_long_ulong",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorByteZeroExtendFirstFaulting_ulong_ulong",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorByteZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_float_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_int_uint",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_uint",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_double_ulong",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_long_ulong",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_ulong",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_float_int",                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_int",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_uint_int",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_float_uint",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_int_uint",                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_uint",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_double_long",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_long",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_ulong_long",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_double_ulong",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_long_ulong",                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorFirstFaulting_ulong",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorFirstFaulting",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_int_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_uint_uint",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_long_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_ulong_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_int_int",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_uint_int",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_int_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_uint_uint",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_long_long",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_ulong_long",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_long_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16SignExtendFirstFaulting_ulong_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_int_int",   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_uint_int",  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_int_uint",  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_uint_uint", ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_long_long", ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_ulong_long",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_long_ulong",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt16WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting_ulong_ulong",["Isa"] = "Sve",          ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_long_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_int_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_ulong_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_uint_uint",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_long_long",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_int_int",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_ulong_long",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_uint_int",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_long_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_int_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_ulong_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32SignExtendFirstFaulting_uint_uint",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32SignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_long_long", ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_int_int",   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_ulong_long",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_uint_int",  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_long_ulong",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_int_uint",  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_ulong_ulong",["Isa"] = "Sve",          ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorInt32WithByteOffsetsSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting_uint_uint", ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_int_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_uint_uint",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_long_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_ulong_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_int_int",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_uint_int",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_int_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_uint_uint",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_long_long",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_ulong_long",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_long_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorSByteSignExtendFirstFaulting_ulong_ulong",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorSByteSignExtendFirstFaulting",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_int_int", ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_uint_int",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_int_uint",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_uint_uint",["Isa"] = "Sve",          ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_long_long",["Isa"] = "Sve",          ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_ulong_long",["Isa"] = "Sve",         ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_long_ulong",["Isa"] = "Sve",         ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting_ulong_ulong",["Isa"] = "Sve",        ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_int_uint",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_uint_uint",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_long_ulong",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_ulong_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_int_int",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_uint_int",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_int_uint",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_uint_uint",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_long_long",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_ulong_long",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_long_ulong",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt16ZeroExtendFirstFaulting_ulong_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt16ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_long_long",["Isa"] = "Sve",          ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_int_int", ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_ulong_long",["Isa"] = "Sve",         ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_uint_int",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_long_ulong",["Isa"] = "Sve",         ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_int_uint",["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_ulong_ulong",["Isa"] = "Sve",        ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting_uint_uint",["Isa"] = "Sve",          ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_long_ulong",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_int_uint",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_ulong_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_uint_uint",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_long_long",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_int_int",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_ulong_long",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_uint_int",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_long_ulong",                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_int_uint",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_ulong_ulong",                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorUInt32ZeroExtendFirstFaulting_uint_uint",                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorUInt32ZeroExtendFirstFaulting",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_float_int",                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_int",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_uint_int",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_float_uint",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_int_uint",                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_double_long",                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_ulong_long",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_double_ulong",                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_long_ulong",                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGatherVectorWithByteOffsetFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_GatherVectorWithByteOffsetFirstFaulting_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GatherVectorWithByteOffsetFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_sbyte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_short",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                                                                                                                                                                          ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_byte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                                                                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_ushort",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_uint",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_GetFfr_ulong",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetFfr",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                                                                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendFirstFaulting_short",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendFirstFaulting",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendFirstFaulting_int",                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendFirstFaulting",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendFirstFaulting_long",                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendFirstFaulting",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendFirstFaulting_ushort",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendFirstFaulting",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendFirstFaulting_uint",                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendFirstFaulting",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorByteZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorByteZeroExtendFirstFaulting_ulong",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorByteZeroExtendFirstFaulting",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_float",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_double",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_sbyte",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_short",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_int",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_long",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_byte",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_ushort",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorFirstFaulting_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendFirstFaulting_int",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendFirstFaulting_long",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendFirstFaulting_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt16SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt16SignExtendFirstFaulting_ulong",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt16SignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt32SignExtendFirstFaulting_long",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt32SignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorInt32SignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorInt32SignExtendFirstFaulting_ulong",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorInt32SignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendFirstFaulting_short",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendFirstFaulting_int",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendFirstFaulting_long",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendFirstFaulting_ushort",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendFirstFaulting_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorSByteSignExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorSByteSignExtendFirstFaulting_ulong",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorSByteSignExtendFirstFaulting",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendFirstFaulting_int",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendFirstFaulting_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendFirstFaulting_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt16ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt16ZeroExtendFirstFaulting_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt16ZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt32ZeroExtendFirstFaulting_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt32ZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLoadVectorUInt32ZeroExtendFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "Sve_LoadVectorUInt32ZeroExtendFirstFaulting_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LoadVectorUInt32ZeroExtendFirstFaulting",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_sbyte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_short",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_byte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_ushort",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_uint",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveSetFfr.template",                new Dictionary<string, string> { ["TestName"] = "Sve_SetFfr_ulong",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SetFfr",                                                                                                ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),


// Sve counting
    ("SveCount16BitElements.template",    new Dictionary<string, string> { ["TestName"] = "Sve_Count16BitElements_",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Count16BitElements",                                                                                    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCount32BitElements.template",    new Dictionary<string, string> { ["TestName"] = "Sve_Count32BitElements_",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Count32BitElements",                                                                                    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCount64BitElements.template",    new Dictionary<string, string> { ["TestName"] = "Sve_Count64BitElements_",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Count64BitElements",                                                                                    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveCount8BitElements.template",     new Dictionary<string, string> { ["TestName"] = "Sve_Count8BitElements_",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Count8BitElements",                                                                                     ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_byte",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_sbyte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_short",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_long",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_float",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_double",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_ushort",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveGetActiveElementCount.template", new Dictionary<string, string> { ["TestName"] = "Sve_GetActiveElementCount_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingSignCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingSignCount_byte_sbyte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingSignCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingSignCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingSignCount_ushort_short",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingSignCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingSignCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingSignCount_uint_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingSignCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingSignCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingSignCount_ulong_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingSignCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_byte_sbyte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_ushort_short",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_uint_int",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_ulong_long",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_byte",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_ushort",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveLeadingZeroCount.template",      new Dictionary<string, string> { ["TestName"] = "Sve_LeadingZeroCount_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "LeadingZeroCount",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_uint_float",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_ulong_double",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_byte_sbyte",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_ushort_short",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_uint_int",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_ulong_long",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_byte",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_ushort",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_uint",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SvePopCount.template",              new Dictionary<string, string> { ["TestName"] = "Sve_PopCount_ulong",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy16BitElementCount",                                                                ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy16BitElementCount",                                                                ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy16BitElementCount",                                                                ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy16BitElementCount",                                                                ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy16BitElementCount_short",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy16BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy16BitElementCount_ushort",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy16BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy32BitElementCount",                                                                ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy32BitElementCount",                                                                ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy32BitElementCount",                                                                ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy32BitElementCount",                                                                ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy32BitElementCount_int",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy32BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy32BitElementCount_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy32BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy64BitElementCount",                                                                ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy64BitElementCount",                                                                ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy64BitElementCount",                                                                ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy64BitElementCount",                                                                ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy64BitElementCount_long",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy64BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy64BitElementCount_ulong",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy64BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy8BitElementCount",                                                                 ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy8BitElementCount",                                                                 ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy8BitElementCount",                                                                 ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementBy8BitElementCount",                                                                 ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_short",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_int",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingDecrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingDecrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingDecrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy16BitElementCount",                                                                ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy16BitElementCount",                                                                ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy16BitElementCount",                                                                ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy16BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy16BitElementCount",                                                                ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy16BitElementCount_short",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy16BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy16BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy16BitElementCount_ushort",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy16BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy32BitElementCount",                                                                ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy32BitElementCount",                                                                ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy32BitElementCount",                                                                ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy32BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy32BitElementCount",                                                                ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy32BitElementCount_int",                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy32BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy32BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy32BitElementCount_uint",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy32BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy64BitElementCount",                                                                ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy64BitElementCount",                                                                ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy64BitElementCount",                                                                ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy64BitElementCount_",                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy64BitElementCount",                                                                ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy64BitElementCount_long",                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy64BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                  ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy64BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy64BitElementCount_ulong",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy64BitElementCount",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                 ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy8BitElementCount",                                                                 ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy8BitElementCount",                                                                 ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy8BitElementCount",                                                                 ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementBy8BitElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementBy8BitElementCount_",                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementBy8BitElementCount",                                                                 ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "SveMaskPattern",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_byte",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                                                               ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_short",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_int",                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_long",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ushort",                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_uint",                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSaturatingIncrementByActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "Sve_SaturatingIncrementByActiveElementCount_ulong",                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "SaturatingIncrementByActiveElementCount",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// Sve bitwise
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_byte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_ushort",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_uint",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAnd.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_And_ulong",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "And",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_sbyte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_short",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_int",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_long",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_byte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_ushort",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_uint",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAndAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_AndAcross_ulong",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_sbyte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_short",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_byte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_ushort",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_uint",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAndNot.template",                new Dictionary<string, string> { ["TestName"] = "Sve_AndNot_ulong",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "AndNot",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitwiseClear.template",          new Dictionary<string, string> { ["TestName"] = "Sve_BitwiseClear_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BitwiseClear",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_sbyte",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_short",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_int",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_long",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_byte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_ushort",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_uint",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveBooleanNot.template",            new Dictionary<string, string> { ["TestName"] = "Sve_BooleanNot_ulong",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "BooleanNot",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_float",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_double",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_sbyte",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_short",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_int",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_long",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_byte",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_ushort",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveInsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "Sve_InsertIntoShiftedVector_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_byte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_ushort",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_uint",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveNot.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Not_ulong",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Not",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_sbyte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_short",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_int",                                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_long",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_byte",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_ushort",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_uint",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOr.template",                    new Dictionary<string, string> { ["TestName"] = "Sve_Or_ulong",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Or",                                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_sbyte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_short",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_int",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_long",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_byte",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_ushort",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_uint",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveOrAcross.template",              new Dictionary<string, string> { ["TestName"] = "Sve_OrAcross_ulong",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrAcross",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_sbyte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_short",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_int",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_long",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_byte",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_ushort",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_uint",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveOrNot.template",                 new Dictionary<string, string> { ["TestName"] = "Sve_OrNot_ulong",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "OrNot",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_sbyte_byte",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_short_ushort",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_int_uint",                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_long_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_byte",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_ushort",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_sbyte_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_short_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_int_ulong",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_byte_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_ushort_ulong",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftLeftLogical.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ShiftLeftLogical_uint_ulong",                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftLeftLogical",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_sbyte_byte",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_short_ushort",                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_int_uint",                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_long_ulong",                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_sbyte_ulong",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_short_ulong",                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmetic.template",  new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightArithmetic_int_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmetic",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmeticForDivide.template",new Dictionary<string, string> {["TestName"] = "Sve_ShiftRightArithmeticForDivide_sbyte",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmeticForDivide",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmeticForDivide.template",new Dictionary<string, string> {["TestName"] = "Sve_ShiftRightArithmeticForDivide_short",                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmeticForDivide",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmeticForDivide.template",new Dictionary<string, string> {["TestName"] = "Sve_ShiftRightArithmeticForDivide_int",                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmeticForDivide",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightArithmeticForDivide.template",new Dictionary<string, string> {["TestName"] = "Sve_ShiftRightArithmeticForDivide_long",                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightArithmeticForDivide",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_byte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_ushort",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_byte_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_ushort_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveShiftRightLogical.template",     new Dictionary<string, string> { ["TestName"] = "Sve_ShiftRightLogical_uint_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ShiftRightLogical",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_sbyte",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_short",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_int",                                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_long",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_byte",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_ushort",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_uint",                                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXor.template",                   new Dictionary<string, string> { ["TestName"] = "Sve_Xor_ulong",                                                                                         ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_sbyte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_short",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_int",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_long",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_byte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_ushort",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_uint",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveXorAcross.template",             new Dictionary<string, string> { ["TestName"] = "Sve_XorAcross_ulong",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "XorAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),


// Sve bitmanipulate
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_float",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_double",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_sbyte",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_short",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_int",                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_long",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_byte",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_ushort",                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_uint",                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveDuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "Sve_DuplicateSelectedScalarToVector_ulong",                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_sbyte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_short",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_int",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_long",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_byte",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_ushort",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_uint",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseBits.template",           new Dictionary<string, string> { ["TestName"] = "Sve_ReverseBits_ulong",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseBits",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_float",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_double",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_sbyte",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_short",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_int",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_long",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_byte",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_ushort",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_uint",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement.template",        new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement_ulong",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement16.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement16_int",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement16",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement16.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement16_long",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement16",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement16.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement16_uint",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement16",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement16.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement16_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement16",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement32.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement32_long",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement32",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement32.template",      new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement32_ulong",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement32",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement8.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement8_short",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement8",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement8.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement8_int",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement8",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement8.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement8_long",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement8",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveReverseElement8.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement8_ushort",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement8",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement8.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement8_uint",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement8",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveReverseElement8.template",       new Dictionary<string, string> { ["TestName"] = "Sve_ReverseElement8_ulong",                                                                             ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ReverseElement8",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_float",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_double",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_sbyte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_short",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_byte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_ushort",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_uint",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("SveSplice.template",                new Dictionary<string, string> { ["TestName"] = "Sve_Splice_ulong",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_float",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_double",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_sbyte",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_short",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_int",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_long",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_byte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_ushort",                                                                              ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_uint",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeEven.template",         new Dictionary<string, string> { ["TestName"] = "Sve_TransposeEven_ulong",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_float",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_double",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_sbyte",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_short",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_int",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_long",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_byte",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_ushort",                                                                               ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_uint",                                                                                 ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveTransposeOdd.template",          new Dictionary<string, string> { ["TestName"] = "Sve_TransposeOdd_ulong",                                                                                ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_float",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_double",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_sbyte",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_short",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_int",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_long",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_byte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_ushort",                                                                                  ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_uint",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipEven.template",             new Dictionary<string, string> { ["TestName"] = "Sve_UnzipEven_ulong",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_float",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_double",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_sbyte",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_short",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_int",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_long",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_byte",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_ushort",                                                                                   ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_uint",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveUnzipOdd.template",              new Dictionary<string, string> { ["TestName"] = "Sve_UnzipOdd_ulong",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_float_uint",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_double_ulong",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_sbyte_byte",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_short_ushort",                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_int_uint",                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_long_ulong",                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_byte",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_ushort",                                                                          ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_uint",                                                                            ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveVectorTableLookup.template",     new Dictionary<string, string> { ["TestName"] = "Sve_VectorTableLookup_ulong",                                                                           ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_float",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_double",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_sbyte",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_short",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_int",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_long",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_byte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_ushort",                                                                                    ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_uint",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipHigh.template",               new Dictionary<string, string> { ["TestName"] = "Sve_ZipHigh_ulong",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_float",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_double",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_sbyte",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_short",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_int",                                                                                        ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_long",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_byte",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_ushort",                                                                                     ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_uint",                                                                                       ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveZipLow.template",                new Dictionary<string, string> { ["TestName"] = "Sve_ZipLow_ulong",                                                                                      ["Isa"] = "Sve",           ["LoadIsa"] = "Sve",     ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// Sve2 scatterstores
    ("Sve2Scatter16BitNarrowing.template",new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter16BitNarrowing_int_uint",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitNarrowing.template",new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter16BitNarrowing_uint",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitNarrowing.template",new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter16BitNarrowing_long_ulong",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitNarrowing.template",new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter16BitNarrowing_ulong",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_int_uint",                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_uint",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_long",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_ulong_long",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_long_ulong",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_ulong",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_long",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_ulong_long",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_long_ulong",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter16BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter16BitWithByteOffsetsNarrowing_ulong",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter16BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitNarrowing.template",new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter32BitNarrowing_long_ulong",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitNarrowing.template",new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter32BitNarrowing_ulong",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitNarrowing",                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_long",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_ulong_long",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_long_ulong",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_ulong",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_long",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_ulong_long",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_long_ulong",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter32BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter32BitWithByteOffsetsNarrowing_ulong",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter32BitWithByteOffsetsNarrowing",                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter8BitNarrowing_int_uint",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter8BitNarrowing_uint",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter8BitNarrowing_long_ulong",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitNarrowing.template", new Dictionary<string, string> { ["TestName"] = "Sve2_Scatter8BitNarrowing_ulong",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitNarrowing",                                                                                  ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter8BitWithByteOffsetsNarrowing_int_uint",                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter8BitWithByteOffsetsNarrowing_uint",                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter8BitWithByteOffsetsNarrowing_long",                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter8BitWithByteOffsetsNarrowing_ulong_long",                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter8BitWithByteOffsetsNarrowing_long_ulong",                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2Scatter8BitWithByteOffsetsNarrowing.template",new Dictionary<string, string> {["TestName"] = "Sve2_Scatter8BitWithByteOffsetsNarrowing_ulong",                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Scatter8BitWithByteOffsetsNarrowing",                                                                   ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_float_uint",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_int_uint",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_double_ulong",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_long_ulong",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_ulong",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_float_uint",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Single",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetSingle()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_int_uint",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt32",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_double_long",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetDouble()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_long",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_ulong_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_double_ulong",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetDouble()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_long_ulong",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_ulong",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_double_long",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetDouble()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_long",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                     ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_ulong_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                   ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_double_ulong",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Double",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetDouble()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_long_ulong",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "Int64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                    ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetInt64()",["ValidateIterResult"] = "false",}),
    ("Sve2ScatterNonTemporal.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ScatterNonTemporal_ulong",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ScatterNonTemporal",                                                                                    ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4VectorType"] = "Vector",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                  ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp4"] = "TestLibrary.Generator.GetUInt64()",["ValidateIterResult"] = "false",}),


// Sve2 maths
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_sbyte",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_short",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_int",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_long",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_byte",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_ushort",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_uint",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAdd.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AbsoluteDifferenceAdd_ulong",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAdd",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningLower_short_sbyte",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningLower",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningLower_int_short",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningLower",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningLower_long_int",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningLower",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningLower_ushort_byte",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningLower",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningLower_uint_ushort",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningLower",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningLower_ulong_uint",                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningLower",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningUpper_short_sbyte",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningUpper",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningUpper_int_short",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningUpper",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningUpper_long_int",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningUpper",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningUpper_ushort_byte",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningUpper",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningUpper_uint_ushort",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningUpper",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceAddWideningUpper_ulong_uint",                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceAddWideningUpper",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningLower_short_sbyte",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningLower_int_short",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningLower_long_int",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningLower_ushort_byte",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningLower_uint_ushort",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningLower_ulong_uint",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningUpper_short_sbyte",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningUpper_int_short",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningUpper_long_int",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningUpper_ushort_byte",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningUpper_uint_ushort",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AbsoluteDifferenceWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_AbsoluteDifferenceWideningUpper_ulong_uint",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AbsoluteDifferenceWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddCarryWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddCarryWideningLower_uint",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddCarryWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddCarryWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddCarryWideningLower_ulong",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddCarryWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddCarryWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddCarryWideningUpper_uint",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddCarryWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddCarryWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddCarryWideningUpper_ulong",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddCarryWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingLower.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingLower_sbyte_short",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingLower",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingLower.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingLower_short_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingLower",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingLower.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingLower_int_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingLower",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingLower.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingLower_byte_ushort",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingLower",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingLower.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingLower_ushort_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingLower",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingLower.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingLower_uint_ulong",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingLower",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingUpper.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingUpper_sbyte_short",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingUpper",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingUpper.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingUpper_short_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingUpper",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingUpper.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingUpper_int_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingUpper",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingUpper.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingUpper_byte_ushort",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingUpper",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingUpper.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingUpper_ushort_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingUpper",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddHighNarowingUpper.template", new Dictionary<string, string> { ["TestName"] = "Sve2_AddHighNarowingUpper_uint_ulong",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddHighNarowingUpper",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_float",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_double",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_sbyte",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_short",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_int",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_long",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_byte",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_ushort",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_uint",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwise_ulong",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwiseWidening.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwiseWidening_short_sbyte",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwiseWidening",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwiseWidening.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwiseWidening_int_short",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwiseWidening",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwiseWidening.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwiseWidening_long_int",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwiseWidening",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwiseWidening.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwiseWidening_ushort_byte",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwiseWidening",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwiseWidening.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwiseWidening_uint_ushort",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwiseWidening",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddPairwiseWidening.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_AddPairwiseWidening_ulong_uint",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddPairwiseWidening",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_sbyte",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_short",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_int",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_long",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_byte",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_ushort",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_uint",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturate.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_AddSaturate_ulong",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturate",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithSignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithSignedAddend_byte_sbyte",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithSignedAddend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithSignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithSignedAddend_ushort_short",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithSignedAddend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithSignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithSignedAddend_uint_int",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithSignedAddend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithSignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithSignedAddend_ulong_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithSignedAddend",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithUnsignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithUnsignedAddend_sbyte_byte",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithUnsignedAddend",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithUnsignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithUnsignedAddend_short_ushort",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithUnsignedAddend",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithUnsignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithUnsignedAddend_int_uint",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithUnsignedAddend",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddSaturateWithUnsignedAddend.template",new Dictionary<string, string> {["TestName"] = "Sve2_AddSaturateWithUnsignedAddend_long_ulong",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddSaturateWithUnsignedAddend",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideLower.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideLower_short_sbyte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideLower",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideLower.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideLower_int_short",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideLower",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideLower.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideLower_long_int",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideLower",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideLower.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideLower_ushort_byte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideLower",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideLower.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideLower_uint_ushort",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideLower",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideLower.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideLower_ulong_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideLower",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideUpper.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideUpper_short_sbyte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideUpper",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideUpper.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideUpper_int_short",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideUpper",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideUpper.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideUpper_long_int",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideUpper",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideUpper.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideUpper_ushort_byte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideUpper",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideUpper.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideUpper_uint_ushort",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideUpper",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideUpper.template",         new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideUpper_ulong_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideUpper",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLower.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLower_short_sbyte",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLower",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLower.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLower_int_short",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLower",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLower.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLower_long_int",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLower",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLower.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLower_ushort_byte",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLower",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLower.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLower_uint_ushort",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLower",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLower.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLower_ulong_uint",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLower",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLowerUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLowerUpper_short_sbyte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLowerUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLowerUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLowerUpper_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLowerUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningLowerUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningLowerUpper_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningLowerUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningUpper.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningUpper_short_sbyte",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningUpper",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningUpper.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningUpper_int_short",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningUpper",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningUpper.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningUpper_long_int",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningUpper",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningUpper.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningUpper_ushort_byte",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningUpper",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningUpper.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningUpper_uint_ushort",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningUpper",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddWideningUpper.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddWideningUpper_ulong_uint",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddWideningUpper",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2DotProductComplex.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_DotProductComplex_int_sbyte",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DotProductComplex",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2DotProductComplex.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_DotProductComplex_long_short",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DotProductComplex",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2DotProductComplex.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_DotProductComplex_int_sbyte",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DotProductComplex",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",["Op4BaseType"] = "UInt64",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",["ValidateIterResult"] = "false",}),
    ("Sve2DotProductComplex.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_DotProductComplex_long_short",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DotProductComplex",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_sbyte",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_short",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_int",                                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_long",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_byte",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_ushort",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_uint",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingAdd.template",           new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingAdd_ulong",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingAdd",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_sbyte",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_short",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_int",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_long",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_byte",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_ushort",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_uint",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtract.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_HalvingSubtract_ulong",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtract",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_sbyte",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_short",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_int",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_byte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_ushort",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_uint",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2HalvingSubtractReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_HalvingSubtractReversed_ulong",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "HalvingSubtractReversed",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxNumberPairwise.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MaxNumberPairwise_float",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxNumberPairwise",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxNumberPairwise.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MaxNumberPairwise_double",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxNumberPairwise",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_float",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_double",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_sbyte",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_short",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_int",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_long",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_byte",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_ushort",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_uint",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MaxPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MaxPairwise_ulong",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinNumberPairwise.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MinNumberPairwise_float",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinNumberPairwise",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinNumberPairwise.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MinNumberPairwise_double",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinNumberPairwise",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_float",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_double",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_sbyte",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_short",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_int",                                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_long",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_byte",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_ushort",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_uint",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MinPairwise.template",          new Dictionary<string, string> { ["TestName"] = "Sve2_MinPairwise_ulong",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddBySelectedScalar_short",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddBySelectedScalar",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddBySelectedScalar_int",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddBySelectedScalar",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddBySelectedScalar_long",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddBySelectedScalar",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddBySelectedScalar_ushort",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddBySelectedScalar",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddBySelectedScalar_uint",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddBySelectedScalar",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddBySelectedScalar_ulong",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddBySelectedScalar",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_short_sbyte",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_int_short",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_long_int",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_ushort_byte",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_uint_ushort",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_ulong_uint",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_int_short",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_long_int",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_uint_ushort",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningLower_ulong_uint",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_short_sbyte",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_int_short",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_long_int",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_ushort_byte",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_uint_ushort",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_ulong_uint",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_int_short",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_long_int",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_uint_ushort",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddWideningUpper_ulong_uint",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyBySelectedScalar_short",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyBySelectedScalar_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyBySelectedScalar_long",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyBySelectedScalar_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyBySelectedScalar_uint",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyBySelectedScalar_ulong",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractBySelectedScalar_short",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractBySelectedScalar_int",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractBySelectedScalar_long",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractBySelectedScalar_ushort",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractBySelectedScalar_uint",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractBySelectedScalar_ulong",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_short_sbyte",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_int_short",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_long_int",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_ushort_byte",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_uint_ushort",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_ulong_uint",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_int_short",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_long_int",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_uint_ushort",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningLower_ulong_uint",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_short_sbyte",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_int_short",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_long_int",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_ushort_byte",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_uint_ushort",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_ulong_uint",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_int_short",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_long_int",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_uint_ushort",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplySubtractWideningUpper_ulong_uint",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_short_sbyte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_ushort_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_uint_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_ulong_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_uint_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningLower_ulong_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_short_sbyte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_ushort_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_uint_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_ulong_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_uint_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_MultiplyWideningUpper_ulong_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiply.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_PolynomialMultiply_byte",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiply",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningLower_ushort_byte",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningLower_ulong_uint",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningLower_byte",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningLower_uint",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningUpper_ushort_byte",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningUpper_ulong_uint",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningUpper_byte",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2PolynomialMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_PolynomialMultiplyWideningUpper_uint",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "PolynomialMultiplyWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingLower_sbyte_short",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingLower",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingLower_short_int",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingLower",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingLower_int_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingLower",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingLower_byte_ushort",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingLower",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingLower_ushort_uint",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingLower",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingLower_uint_ulong",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingLower",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingUpper_sbyte_short",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingUpper",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingUpper_short_int",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingUpper",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingUpper_int_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingUpper",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingUpper_byte_ushort",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingUpper",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingUpper_ushort_uint",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingUpper",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingAddHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingAddHighNarowingUpper_uint_ulong",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingAddHighNarowingUpper",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_sbyte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_short",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_int",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_long",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_byte",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_ushort",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingHalvingAdd.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_RoundingHalvingAdd_ulong",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingHalvingAdd",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingLower_sbyte_short",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingLower",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingLower_short_int",                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingLower",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingLower_int_long",                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingLower",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingLower_byte_ushort",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingLower",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingLower_ushort_uint",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingLower",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingLower_uint_ulong",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingLower",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingUpper_sbyte_short",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingUpper",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingUpper_short_int",                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingUpper",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingUpper_int_long",                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingUpper",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingUpper_byte_ushort",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingUpper",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingUpper_ushort_uint",                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingUpper",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2RoundingSubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_RoundingSubtractHighNarowingUpper_uint_ulong",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "RoundingSubtractHighNarowingUpper",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingAbs.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingAbs_sbyte",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingAbs",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingAbs.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingAbs_short",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingAbs",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingAbs.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingAbs_int",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingAbs",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingAbs.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingAbs_long",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingAbs",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLower_short_sbyte",                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLower",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLower_int_short",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLower",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLower_long_int",                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLower",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLower_int_short",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLower",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLower_long_int",                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLower",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLowerUpper_short_sbyte",             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLowerUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLowerUpper_int_short",               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLowerUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningLowerUpper_long_int",                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningLowerUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningUpper_short_sbyte",                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningUpper",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningUpper_int_short",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningUpper",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningUpper_long_int",                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningUpper",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningUpper_int_short",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningUpper",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyAddWideningUpper_long_int",                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyAddWideningUpper",                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_sbyte",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_short",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_int",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_short",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_int",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyHigh_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyHigh",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLower_short_sbyte",             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLower",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLower_int_short",               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLower",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLower_long_int",                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLower",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLower_int_short",               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLower",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLower_long_int",                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLower",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLowerUpper_short_sbyte",   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLowerUpper",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLowerUpper_int_short",     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLowerUpper",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningLowerUpper_long_int",      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningLowerUpper",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningUpper_short_sbyte",             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningUpper_int_short",               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningUpper_long_int",                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningUpper_int_short",               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplySubtractWideningUpper_long_int",                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplySubtractWideningUpper",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningLower_short_sbyte",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningLower_int_short",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningLower_long_int",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningLower_int_short",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningLower_long_int",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningUpper_short_sbyte",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningUpper_int_short",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningUpper_long_int",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningUpper_int_short",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingDoublingMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingDoublingMultiplyWideningUpper_long_int",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingDoublingMultiplyWideningUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingNegate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingNegate_sbyte",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingNegate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingNegate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingNegate_short",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingNegate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingNegate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingNegate_int",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingNegate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingNegate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SaturatingNegate_long",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingNegate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_sbyte",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_short",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_int",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_long",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_short",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_int",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyAddHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyAddHigh_long",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyAddHigh",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_sbyte",                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_short",                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_int",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_long",                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_short",                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_int",                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplyHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplyHigh_long",                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplyHigh",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_sbyte",                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_short",                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_int",                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_long",                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_short",                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_int",                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingMultiplySubtractHigh.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingMultiplySubtractHigh_long",                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingMultiplySubtractHigh",                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                    ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingLower_sbyte_short",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingLower_short_int",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingLower_int_long",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingLower_byte_ushort",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingLower_ushort_uint",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingLower_uint_ulong",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingUpper_sbyte_short",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingUpper_short_int",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingUpper_int_long",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingUpper_byte_ushort",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingUpper_ushort_uint",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractHighNarowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractHighNarowingUpper_uint_ulong",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractHighNarowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_sbyte",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_short",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_int",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_long",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_byte",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_ushort",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_uint",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturate.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractSaturate_ulong",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturate",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_sbyte",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_short",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_long",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_byte",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_uint",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractSaturateReversed.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractSaturateReversed_ulong",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractSaturateReversed",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideLower_short_sbyte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideLower_int_short",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideLower_long_int",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideLower_ushort_byte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideLower_uint_ushort",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideLower_ulong_uint",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideUpper_short_sbyte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideUpper_int_short",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideUpper_long_int",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideUpper_ushort_byte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideUpper_uint_ushort",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideUpper_ulong_uint",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningLower_short_sbyte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningLower_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningLower_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningLower_ushort_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningLower_uint_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLower.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningLower_ulong_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLower",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWideningLowerUpper_short_sbyte",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLowerUpper",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWideningLowerUpper_int_short",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLowerUpper",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWideningLowerUpper_long_int",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningLowerUpper",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningUpper_short_sbyte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningUpper_int_short",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningUpper_long_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningUpper_ushort_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningUpper_uint_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpper.template",new Dictionary<string, string> { ["TestName"] = "Sve2_SubtractWideningUpper_ulong_uint",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpper",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWideningUpperLower_short_sbyte",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpperLower",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWideningUpperLower_int_short",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpperLower",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWideningUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWideningUpperLower_long_int",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWideningUpperLower",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWithBorrowWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWithBorrowWideningLower_uint",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWithBorrowWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWithBorrowWideningLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWithBorrowWideningLower_ulong",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWithBorrowWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWithBorrowWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWithBorrowWideningUpper_uint",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWithBorrowWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SubtractWithBorrowWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SubtractWithBorrowWideningUpper_ulong",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SubtractWithBorrowWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),


// Sve2 mask
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_byte",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_byte",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_byte",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_byte",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ushort",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ushort",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ushort",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ushort",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ulong",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ulong",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ulong",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanMask_ulong",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanMask",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_byte",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_byte",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_byte",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_byte",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ushort",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ushort",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ushort",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ushort",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_uint",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_uint",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_uint",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_uint",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ulong",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ulong",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ulong",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileGreaterThanOrEqualMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileGreaterThanOrEqualMask_ulong",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileGreaterThanOrEqualMask",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_float",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",                                   ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_double",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",                                   ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_sbyte",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",                                    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_short",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_int",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_long",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_byte",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_ushort",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_uint",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileReadAfterWriteMask_ulong",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_float",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",                                   ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_double",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",                                   ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_sbyte",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",                                    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_short",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",                                    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_int",                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",                                    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_long",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",                                    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_byte",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",                                     ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_ushort",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",                                   ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_uint",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",                                   ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "Sve2_CreateWhileWriteAfterReadMask_ulong",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",                                   ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sve2Match.template",                new Dictionary<string, string> { ["TestName"] = "Sve2_Match_sbyte",                                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Match",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Match.template",                new Dictionary<string, string> { ["TestName"] = "Sve2_Match_short",                                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Match",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Match.template",                new Dictionary<string, string> { ["TestName"] = "Sve2_Match_byte",                                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Match",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2Match.template",                new Dictionary<string, string> { ["TestName"] = "Sve2_Match_ushort",                                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Match",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2NoMatch.template",              new Dictionary<string, string> { ["TestName"] = "Sve2_NoMatch_sbyte",                                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "NoMatch",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2NoMatch.template",              new Dictionary<string, string> { ["TestName"] = "Sve2_NoMatch_short",                                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "NoMatch",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2NoMatch.template",              new Dictionary<string, string> { ["TestName"] = "Sve2_NoMatch_byte",                                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "NoMatch",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2NoMatch.template",              new Dictionary<string, string> { ["TestName"] = "Sve2_NoMatch_ushort",                                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "NoMatch",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingLower_sbyte_short",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingLower_short_int",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingLower_int_long",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingLower_byte_ushort",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingLower_ushort_uint",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingLower_uint_ulong",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingUpper_sbyte_short",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingUpper_short_int",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingUpper_int_long",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingUpper_byte_ushort",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingUpper_ushort_uint",                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractNarrowingUpper_uint_ulong",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractNarrowingUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractUnsignedNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractUnsignedNarrowingLower_byte_short",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractUnsignedNarrowingLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractUnsignedNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractUnsignedNarrowingLower_ushort_int",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractUnsignedNarrowingLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractUnsignedNarrowingLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractUnsignedNarrowingLower_uint_long",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractUnsignedNarrowingLower",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractUnsignedNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractUnsignedNarrowingUpper_byte_short",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractUnsignedNarrowingUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractUnsignedNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractUnsignedNarrowingUpper_ushort_int",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractUnsignedNarrowingUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingExtractUnsignedNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingExtractUnsignedNarrowingUpper_uint_long",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingExtractUnsignedNarrowingUpper",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),


// Sve2 gatherloads
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_int_uint",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_uint_uint",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_long_ulong",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_ulong_ulong",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_int_uint",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_uint_uint",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_long_long",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_ulong_long",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_long_ulong",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorByteZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorByteZeroExtendNonTemporal_ulong_ulong",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorByteZeroExtendNonTemporal",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_int_uint",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_uint_uint",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_long_ulong",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_ulong_ulong",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_long_long",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_ulong_long",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_long_ulong",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16SignExtendNonTemporal_ulong_ulong",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16WithByteOffsetsSignExtendNonTemporal_int_uint",    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16WithByteOffsetsSignExtendNonTemporal_uint_uint",   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16WithByteOffsetsSignExtendNonTemporal_long_long",   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16WithByteOffsetsSignExtendNonTemporal_ulong_long",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16WithByteOffsetsSignExtendNonTemporal_long_ulong",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt16WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt16WithByteOffsetsSignExtendNonTemporal_ulong_ulong", ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt16WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_long_ulong",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_int_uint",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_ulong_ulong",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_uint_uint",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_long_long",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_int_int",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_ulong_long",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_uint_int",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_long_ulong",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_int_uint",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_ulong_ulong",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32SignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32SignExtendNonTemporal_uint_uint",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32SignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_long_long",   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_int_int",     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_ulong_long",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_uint_int",    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_long_ulong",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_int_uint",    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_ulong_ulong", ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorInt32WithByteOffsetsSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorInt32WithByteOffsetsSignExtendNonTemporal_uint_uint",   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorInt32WithByteOffsetsSignExtendNonTemporal",                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_float_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_int_uint",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_uint",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_double_ulong",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_long_ulong",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_ulong",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_float_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_int_uint",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_uint",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_double_long",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_ulong_long",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_double_ulong",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_long_ulong",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_ulong",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_double_long",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_ulong_long",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_double_ulong",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_long_ulong",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorNonTemporal_ulong",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorNonTemporal",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_int_uint",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_uint_uint",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_long_ulong",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_ulong_ulong",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_int_uint",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_uint_uint",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_long_long",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_ulong_long",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_long_ulong",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorSByteSignExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorSByteSignExtendNonTemporal_ulong_ulong",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorSByteSignExtendNonTemporal",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal_int_uint",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal_uint_uint", ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal_long_long", ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal_ulong_long",["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal_long_ulong",["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal_ulong_ulong",["Isa"] = "Sve2",         ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_int_uint",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_uint_uint",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_long_ulong",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_ulong_ulong",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_long_long",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_ulong_long",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_long_ulong",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt16ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt16ZeroExtendNonTemporal_ulong_ulong",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt16ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_long_long", ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_int_int",   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_ulong_long",["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_uint_int",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_long_ulong",["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_int_uint",  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_ulong_ulong",["Isa"] = "Sve2",         ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal_uint_uint", ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32WithByteOffsetsZeroExtendNonTemporal",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_long_ulong",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_int_uint",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_ulong_ulong",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_uint_uint",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_long_long",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_int_int",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_ulong_long",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_uint_int",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_long_ulong",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_int_uint",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_ulong_ulong",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2GatherVectorUInt32ZeroExtendNonTemporal.template",new Dictionary<string, string> {["TestName"] = "Sve2_GatherVectorUInt32ZeroExtendNonTemporal_uint_uint",                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "GatherVectorUInt32ZeroExtendNonTemporal",                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                       ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),


// Sve2 fp
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_sbyte",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_short",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_int",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_long",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_byte",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_ushort",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_uint",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2AddRotateComplex.template",     new Dictionary<string, string> { ["TestName"] = "Sve2_AddRotateComplex_ulong",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2DownConvertNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_DownConvertNarrowingUpper_float_double",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DownConvertNarrowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2DownConvertRoundingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_DownConvertRoundingOdd_float_double",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DownConvertRoundingOdd",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2DownConvertRoundingOddUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_DownConvertRoundingOddUpper_float_double",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "DownConvertRoundingOddUpper",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2Log2.template",                 new Dictionary<string, string> { ["TestName"] = "Sve2_Log2_int_float",                                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Log2",                                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2Log2.template",                 new Dictionary<string, string> { ["TestName"] = "Sve2_Log2_long_double",                                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Log2",                                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_sbyte",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_short",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_long",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_byte",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetByte()",["NextValueOp2"] = "TestLibrary.Generator.GetByte()",["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_uint",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplex_ulong",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                  ["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplexBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplexBySelectedScalar_short",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplexBySelectedScalar",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplexBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplexBySelectedScalar_int",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplexBySelectedScalar",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "Byte",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplexBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplexBySelectedScalar_ushort",                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplexBySelectedScalar",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16",["Op4BaseType"] = "Byte",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",["ValidateIterResult"] = "false",}),
    ("Sve2MultiplyAddRotateComplexBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "Sve2_MultiplyAddRotateComplexBySelectedScalar_uint",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MultiplyAddRotateComplexBySelectedScalar",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32",["Op4BaseType"] = "Byte",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2ReciprocalEstimate.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ReciprocalEstimate_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ReciprocalEstimate",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ReciprocalSqrtEstimate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ReciprocalSqrtEstimate_uint",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ReciprocalSqrtEstimate",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingComplexAddRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingComplexAddRotate_sbyte",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingComplexAddRotate",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingComplexAddRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingComplexAddRotate_short",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingComplexAddRotate",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingComplexAddRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingComplexAddRotate_int",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingComplexAddRotate",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingComplexAddRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingComplexAddRotate_long",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingComplexAddRotate",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingComplexMultiplyAddHighRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingComplexMultiplyAddHighRotate_sbyte",     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingComplexMultiplyAddHighRotate",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingComplexMultiplyAddHighRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingComplexMultiplyAddHighRotate_short",     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingComplexMultiplyAddHighRotate",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingComplexMultiplyAddHighRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingComplexMultiplyAddHighRotate_int",       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingComplexMultiplyAddHighRotate",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingComplexMultiplyAddHighRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingComplexMultiplyAddHighRotate_long",      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingComplexMultiplyAddHighRotate",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                      ["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingComplexMultiplyAddHighRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingComplexMultiplyAddHighRotate_short",     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingComplexMultiplyAddHighRotate",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",["Op4BaseType"] = "UInt64",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",["ValidateIterResult"] = "false",}),
    ("Sve2SaturatingRoundingDoublingComplexMultiplyAddHighRotate.template",new Dictionary<string, string> {["TestName"] = "Sve2_SaturatingRoundingDoublingComplexMultiplyAddHighRotate_int",       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "SaturatingRoundingDoublingComplexMultiplyAddHighRotate",               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",["Op4BaseType"] = "UInt64",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",["ValidateIterResult"] = "false",}),
    ("Sve2UpConvertWideningUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_UpConvertWideningUpper_double_float",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "UpConvertWideningUpper",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),


// Sve2 counting
    ("Sve2CountMatchingElements.template",new Dictionary<string, string> { ["TestName"] = "Sve2_CountMatchingElements_uint_int",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CountMatchingElements",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2CountMatchingElements.template",new Dictionary<string, string> { ["TestName"] = "Sve2_CountMatchingElements_ulong_long",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CountMatchingElements",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2CountMatchingElements.template",new Dictionary<string, string> { ["TestName"] = "Sve2_CountMatchingElements_uint",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CountMatchingElements",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2CountMatchingElements.template",new Dictionary<string, string> { ["TestName"] = "Sve2_CountMatchingElements_ulong",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CountMatchingElements",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2CountMatchingElementsIn128BitSegments.template",new Dictionary<string, string> {["TestName"] = "Sve2_CountMatchingElementsIn128BitSegments_byte_sbyte",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CountMatchingElementsIn128BitSegments",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2CountMatchingElementsIn128BitSegments.template",new Dictionary<string, string> {["TestName"] = "Sve2_CountMatchingElementsIn128BitSegments_byte",                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "CountMatchingElementsIn128BitSegments",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),


// Sve2 bitwise
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_sbyte",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_short",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_int",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_long",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_byte",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_ushort",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_uint",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseClearXor_ulong",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseClearXor",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_sbyte",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_short",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_int",                                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_long",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_byte",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_ushort",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_uint",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelect.template",        new Dictionary<string, string> { ["TestName"] = "Sve2_BitwiseSelect_ulong",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelect",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_sbyte",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_short",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_int",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_long",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_ushort",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_uint",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectLeftInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectLeftInverted_ulong",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectLeftInverted",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_sbyte",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_short",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_int",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_long",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_byte",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_ushort",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2BitwiseSelectRightInverted.template",new Dictionary<string, string> {["TestName"] = "Sve2_BitwiseSelectRightInverted_ulong",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "BitwiseSelectRightInverted",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRounded_sbyte",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRounded",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRounded_short",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRounded",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRounded_int",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRounded",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRounded_long",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRounded",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRoundedSaturate_sbyte",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRoundedSaturate",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRoundedSaturate_short",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRoundedSaturate",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRoundedSaturate_int",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRoundedSaturate",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticRoundedSaturate_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticRoundedSaturate",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticSaturate_sbyte",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticSaturate",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticSaturate_short",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticSaturate",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticSaturate_int",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticSaturate",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftArithmeticSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftArithmeticSaturate_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftArithmeticSaturate",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_sbyte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_short",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_int",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_long",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_byte",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_ushort",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_uint",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftAndInsert.template",   new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLeftAndInsert_ulong",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftAndInsert",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturate_byte_sbyte",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturate_ushort_short",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturate_uint_int",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturate_ulong_long",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturateUnsigned.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturateUnsigned_byte_sbyte",                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturateUnsigned",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturateUnsigned.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturateUnsigned_ushort_short",                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturateUnsigned",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturateUnsigned.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturateUnsigned_uint_int",                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturateUnsigned",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalSaturateUnsigned.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalSaturateUnsigned_ulong_long",                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalSaturateUnsigned",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningEven_short_sbyte",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningEven",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningEven_int_short",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningEven",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningEven_long_int",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningEven",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningEven_ushort_byte",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningEven",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningEven_uint_ushort",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningEven",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningEven_ulong_uint",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningEven",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningOdd_short_sbyte",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningOdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningOdd_int_short",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningOdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningOdd_long_int",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningOdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningOdd_ushort_byte",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningOdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningOdd_uint_ushort",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningOdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLeftLogicalWideningOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLeftLogicalWideningOdd_ulong_uint",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLeftLogicalWideningOdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRounded.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLogicalRounded_byte_sbyte",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRounded",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRounded.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLogicalRounded_ushort_short",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRounded",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRounded.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLogicalRounded_uint_int",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRounded",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRounded.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftLogicalRounded_ulong_long",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRounded",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLogicalRoundedSaturate_byte_sbyte",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRoundedSaturate",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLogicalRoundedSaturate_ushort_short",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRoundedSaturate",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLogicalRoundedSaturate_uint_int",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRoundedSaturate",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftLogicalRoundedSaturate.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftLogicalRoundedSaturate_ulong_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftLogicalRoundedSaturate",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_sbyte",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_short",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_int",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_long",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_byte",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_ushort",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_uint",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightAndInsert.template",  new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightAndInsert_ulong",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightAndInsert",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticAdd_sbyte",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticAdd",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticAdd_short",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticAdd",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticAdd_int",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticAdd",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticAdd_long",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticAdd",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateEven_sbyte_short",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateEven",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateEven_short_int",                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateEven",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateEven_int_long",                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateEven",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateEven_byte_ushort",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateEven",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateEven_ushort_uint",                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateEven",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateEven_uint_ulong",                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateEven",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateOdd_sbyte_short",                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateOdd",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateOdd_short_int",                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateOdd",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateOdd_int_long",                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateOdd",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateOdd_byte_ushort",                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateOdd",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateOdd_ushort_uint",                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateOdd",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateOdd_uint_ulong",                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateOdd",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateUnsignedEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateUnsignedEven_byte_short",          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateUnsignedEven",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateUnsignedEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateUnsignedEven_ushort_int",          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateUnsignedEven",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateUnsignedEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateUnsignedEven_uint_long",           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateUnsignedEven",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateUnsignedOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateUnsignedOdd_byte_short",            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateUnsignedOdd",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateUnsignedOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateUnsignedOdd_ushort_int",            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateUnsignedOdd",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticNarrowingSaturateUnsignedOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticNarrowingSaturateUnsignedOdd_uint_long",             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticNarrowingSaturateUnsignedOdd",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRounded_sbyte",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRounded",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRounded_short",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRounded",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRounded_int",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRounded",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRounded_long",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRounded",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedAdd_sbyte",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedAdd",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedAdd_short",                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedAdd",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedAdd_int",                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedAdd",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedAdd_long",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedAdd",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateEven_sbyte_short",           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateEven",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateEven_short_int",             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateEven",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateEven_int_long",              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateEven",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateOdd_sbyte_short",             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateOdd",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateOdd_short_int",               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateOdd",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateOdd_int_long",                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateOdd",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven_byte_short",["Isa"] = "Sve2",      ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven_ushort_int",["Isa"] = "Sve2",      ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven_uint_long",["Isa"] = "Sve2",       ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateUnsignedEven",             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd_byte_short",["Isa"] = "Sve2",        ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd_ushort_int",["Isa"] = "Sve2",        ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd_uint_long",["Isa"] = "Sve2",         ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightArithmeticRoundedNarrowingSaturateUnsignedOdd",              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalAdd.template", new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightLogicalAdd_byte",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalAdd",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalAdd.template", new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightLogicalAdd_ushort",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalAdd",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalAdd.template", new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightLogicalAdd_uint",                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalAdd",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalAdd.template", new Dictionary<string, string> { ["TestName"] = "Sve2_ShiftRightLogicalAdd_ulong",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalAdd",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingEven_sbyte_short",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingEven",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingEven_short_int",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingEven",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingEven_int_long",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingEven",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingEven_byte_ushort",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingEven",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingEven_ushort_uint",                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingEven",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingEven_uint_ulong",                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingEven",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingOdd_sbyte_short",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingOdd",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingOdd_short_int",                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingOdd",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingOdd_int_long",                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingOdd",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingOdd_byte_ushort",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingOdd",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingOdd_ushort_uint",                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingOdd",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalNarrowingOdd_uint_ulong",                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalNarrowingOdd",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRounded_byte",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRounded",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRounded_ushort",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRounded",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRounded_uint",                                                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRounded",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRounded.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRounded_ulong",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRounded",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedAdd_byte",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedAdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedAdd_ushort",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedAdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedAdd_uint",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedAdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedAdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedAdd_ulong",                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedAdd",                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingEven_sbyte_short",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingEven",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingEven_short_int",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingEven",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingEven_int_long",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingEven",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingEven_byte_ushort",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingEven",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingEven_ushort_uint",                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingEven",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingEven_uint_ulong",                                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingEven",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingOdd_sbyte_short",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingOdd",                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingOdd_short_int",                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingOdd",                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingOdd_int_long",                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingOdd",                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingOdd_byte_ushort",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingOdd",                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingOdd_ushort_uint",                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingOdd",                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingOdd_uint_ulong",                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingOdd",                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingSaturateEven_byte_ushort",                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingSaturateEven",                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingSaturateEven_ushort_uint",                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingSaturateEven",                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingSaturateEven.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingSaturateEven_uint_ulong",                  ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingSaturateEven",                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingSaturateOdd_byte_ushort",                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingSaturateOdd",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingSaturateOdd_ushort_uint",                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingSaturateOdd",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2ShiftRightLogicalRoundedNarrowingSaturateOdd.template",new Dictionary<string, string> {["TestName"] = "Sve2_ShiftRightLogicalRoundedNarrowingSaturateOdd_uint_ulong",                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "ShiftRightLogicalRoundedNarrowingSaturateOdd",                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_sbyte",                                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_short",                                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_int",                                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_long",                                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_byte",                                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_ushort",                                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_uint",                                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sve2_Xor_ulong",                                                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "Xor",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_sbyte",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_short",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_int",                                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_long",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                   ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_byte",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_ushort",                                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_uint",                                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sve2_XorRotateRight_ulong",                                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "XorRotateRight",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                  ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// Sve2 bitmanipulate
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_sbyte",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_short",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_int",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_long",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_ushort",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_uint",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorLowerUpper.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorLowerUpper_ulong",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorLowerUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_sbyte",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_short",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int16",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt16()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_int",                                                                 ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int32",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt32()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_long",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Int64",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetInt64()",                         ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_byte",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_ushort",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_uint",                                                                ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2InterleavingXorUpperLower.template",new Dictionary<string, string> {["TestName"] = "Sve2_InterleavingXorUpperLower_ulong",                                                               ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "InterleavingXorUpperLower",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningLower_short_sbyte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningLower_int_short",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningLower_long_int",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningLower_ushort_byte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningLower_uint_ushort",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningLower.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningLower_ulong_uint",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningLower",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningUpper_short_sbyte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningUpper_int_short",                                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningUpper_long_int",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningUpper_ushort_byte",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningUpper_uint_ushort",                                                                    ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2MoveWideningUpper.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_MoveWideningUpper_ulong_uint",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "MoveWideningUpper",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_float_uint",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Single_Single",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt32",                                                         ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_double_ulong",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Double_Double",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt64",                                                         ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_sbyte_byte",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "SByte_SByte",["Op2VectorType"] = "Vector",["Op2BaseType"] = "Byte",                                                             ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_short_ushort",                                                                   ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Int16_Int16",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt16",                                                           ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_int_uint",                                                                       ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Int32_Int32",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt32",                                                           ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_long_ulong",                                                                     ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Int64_Int64",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt64",                                                           ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_byte",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Byte_Byte",["Op2VectorType"] = "Vector",["Op2BaseType"] = "Byte",                                                               ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_ushort",                                                                         ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "UInt16_UInt16",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt16",                                                         ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_uint",                                                                           ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "UInt32_UInt32",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt32",                                                         ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookup.template",    new Dictionary<string, string> { ["TestName"] = "Sve2_VectorTableLookup_ulong",                                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "UInt64_UInt64",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt64",                                                         ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_float_uint",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_double_ulong",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_sbyte_byte",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_short_ushort",                                                      ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_int_uint",                                                          ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_long_ulong",                                                        ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_byte",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_ushort",                                                            ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_uint",                                                              ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt32", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt32()",                        ["ValidateIterResult"] = "false",}),
    ("Sve2VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "Sve2_VectorTableLookupExtension_ulong",                                                             ["Isa"] = "Sve2",          ["LoadIsa"] = "Sve2",    ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt64", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp3"] = "TestLibrary.Generator.GetUInt64()",                        ["ValidateIterResult"] = "false",}),


// SveBf16
    ("SveBf16Bfloat16DotProduct.template",new Dictionary<string, string> { ["TestName"] = "SveBf16_Bfloat16DotProduct_float_bfloat16",                                                             ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Bfloat16DotProduct",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16Bfloat16MatrixMultiplyAccumulate.template",new Dictionary<string, string> {["TestName"] = "SveBf16_Bfloat16MatrixMultiplyAccumulate_float_bfloat16",                                  ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Bfloat16MatrixMultiplyAccumulate",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16Bfloat16MultiplyAddWideningToSinglePrecisionLower.template",new Dictionary<string, string> {["TestName"] = "SveBf16_Bfloat16MultiplyAddWideningToSinglePrecisionLower_float_bfloat16",["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Bfloat16MultiplyAddWideningToSinglePrecisionLower",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16Bfloat16MultiplyAddWideningToSinglePrecisionLower.template",new Dictionary<string, string> {["TestName"] = "SveBf16_Bfloat16MultiplyAddWideningToSinglePrecisionLower_float_bfloat16",["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Bfloat16MultiplyAddWideningToSinglePrecisionLower",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",          ["ValidateIterResult"] = "false",}),
    ("SveBf16Bfloat16MultiplyAddWideningToSinglePrecisionUpper.template",new Dictionary<string, string> {["TestName"] = "SveBf16_Bfloat16MultiplyAddWideningToSinglePrecisionUpper_float_bfloat16",["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Bfloat16MultiplyAddWideningToSinglePrecisionUpper",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16Bfloat16MultiplyAddWideningToSinglePrecisionUpper.template",new Dictionary<string, string> {["TestName"] = "SveBf16_Bfloat16MultiplyAddWideningToSinglePrecisionUpper_float_bfloat16",["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Bfloat16MultiplyAddWideningToSinglePrecisionUpper",                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",          ["ValidateIterResult"] = "false",}),
    ("SveBf16ConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConcatenateEvenInt128FromTwoInputs_bfloat16",                                    ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16ConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConcatenateOddInt128FromTwoInputs_bfloat16",                                      ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConditionalExtractAfterLastActiveElement_bfloat16",                        ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConditionalExtractAfterLastActiveElement_bfloat16",                        ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                     ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConditionalExtractAfterLastActiveElementAndReplicate_bfloat16",["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConditionalExtractLastActiveElement_bfloat16",                                  ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConditionalExtractLastActiveElement_bfloat16",                                  ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                     ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ConditionalExtractLastActiveElementAndReplicate_bfloat16",          ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConditionalSelect.template", new Dictionary<string, string> { ["TestName"] = "SveBf16_ConditionalSelect_bfloat16",                                                                    ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16ConvertToBFloat16.template", new Dictionary<string, string> { ["TestName"] = "SveBf16_ConvertToBFloat16_bfloat16_float",                                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ConvertToBFloat16",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveBf16CreateFalseMaskBFloat16.template",new Dictionary<string, string> {["TestName"] = "SveBf16_CreateFalseMaskBFloat16_bfloat16",                                                          ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "CreateFalseMaskBFloat16",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",                                                                                                                                                                                       ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveBf16CreateTrueMaskBFloat16.template",new Dictionary<string, string> {["TestName"] = "SveBf16_CreateTrueMaskBFloat16_bfloat16",                                                            ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "CreateTrueMaskBFloat16",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",                                 ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveBf16CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "SveBf16_CreateWhileReadAfterWriteMask_bfloat16",                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",                                 ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveBf16CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "SveBf16_CreateWhileWriteAfterReadMask_bfloat16",                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",                                 ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveBf16DotProductBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "SveBf16_DotProductBySelectedScalar_float_bfloat16",                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "DotProductBySelectedScalar",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",            ["ValidateIterResult"] = "false",}),
    ("SveBf16DownConvertNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "SveBf16_DownConvertNarrowingUpper_bfloat16_float",                                                ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "DownConvertNarrowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveBf16DuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "SveBf16_DuplicateSelectedScalarToVector_bfloat16",                                          ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16ExtractAfterLastScalar.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ExtractAfterLastScalar_bfloat16",                                                            ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16ExtractAfterLastVector.template",new Dictionary<string, string> {["TestName"] = "SveBf16_ExtractAfterLastVector_bfloat16",                                                            ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16ExtractLastScalar.template", new Dictionary<string, string> { ["TestName"] = "SveBf16_ExtractLastScalar_bfloat16",                                                                    ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16ExtractLastVector.template", new Dictionary<string, string> { ["TestName"] = "SveBf16_ExtractLastVector_bfloat16",                                                                    ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16ExtractVector.template",     new Dictionary<string, string> { ["TestName"] = "SveBf16_ExtractVector_bfloat16",                                                                        ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16GetActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "SveBf16_GetActiveElementCount_bfloat16",                                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16InsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "SveBf16_InsertIntoShiftedVector_bfloat16",                                                          ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16InterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveBf16_InterleaveEvenInt128FromTwoInputs_bfloat16",                                      ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16InterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveBf16_InterleaveInt128FromHighHalvesOfTwoInputs_bfloat16",                      ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16InterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveBf16_InterleaveInt128FromLowHalvesOfTwoInputs_bfloat16",                        ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16InterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveBf16_InterleaveOddInt128FromTwoInputs_bfloat16",                                        ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVector.template",        new Dictionary<string, string> { ["TestName"] = "SveBf16_LoadVector_bfloat16",                                                                           ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveBf16_LoadVector128AndReplicateToVector_bfloat16",                                      ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveBf16_LoadVector256AndReplicateToVector_bfloat16",                                      ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "SveBf16_LoadVectorFirstFaulting_bfloat16",                                                          ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVectorNonFaulting.template",new Dictionary<string, string> {["TestName"] = "SveBf16_LoadVectorNonFaulting_bfloat16",                                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",                                 ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "SveBf16_LoadVectorNonTemporal_bfloat16",                                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVectorx2.template",      new Dictionary<string, string> { ["TestName"] = "SveBf16_LoadVectorx2_bfloat16",                                                                         ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "BFloat16_BFloat16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "BFloat16",                        ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVectorx3.template",      new Dictionary<string, string> { ["TestName"] = "SveBf16_LoadVectorx3_bfloat16",                                                                         ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "BFloat16_BFloat16_BFloat16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "BFloat16",        ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16LoadVectorx4.template",      new Dictionary<string, string> { ["TestName"] = "SveBf16_LoadVectorx4_bfloat16",                                                                         ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "BFloat16_BFloat16_BFloat16_BFloat16",["Op1VectorType"] = "Vector",["Op1BaseType"] = "BFloat16",["Op2BaseType"] = "BFloat16",                                                    ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16PopCount.template",          new Dictionary<string, string> { ["TestName"] = "SveBf16_PopCount_ushort_bfloat16",                                                                      ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16ReverseElement.template",    new Dictionary<string, string> { ["TestName"] = "SveBf16_ReverseElement_bfloat16",                                                                       ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                                                                                                         ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                                    ["ValidateIterResult"] = "false",}),
    ("SveBf16Splice.template",            new Dictionary<string, string> { ["TestName"] = "SveBf16_Splice_bfloat16",                                                                               ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveBf16_Store_bfloat16",                                                                                ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                     ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveBf16_Store_bfloat16",                                                                                ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "BFloat16_BFloat16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBf16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveBf16_Store_bfloat16",                                                                                ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "BFloat16_BFloat16_BFloat16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBf16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveBf16_Store_bfloat16",                                                                                ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "BFloat16_BFloat16_BFloat16_BFloat16",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveBf16StoreNonTemporal.template",  new Dictionary<string, string> { ["TestName"] = "SveBf16_StoreNonTemporal_bfloat16",                                                                     ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",                                ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "BFloat16",["LargestVectorSize"] = "8", ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",                                                                     ["NextValueOp3"] = "TestLibrary.Generator.GetBFloat16()",                      ["ValidateIterResult"] = "false",}),
    ("SveBf16TransposeEven.template",     new Dictionary<string, string> { ["TestName"] = "SveBf16_TransposeEven_bfloat16",                                                                        ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16TransposeOdd.template",      new Dictionary<string, string> { ["TestName"] = "SveBf16_TransposeOdd_bfloat16",                                                                         ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16UnzipEven.template",         new Dictionary<string, string> { ["TestName"] = "SveBf16_UnzipEven_bfloat16",                                                                            ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16UnzipOdd.template",          new Dictionary<string, string> { ["TestName"] = "SveBf16_UnzipOdd_bfloat16",                                                                             ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16VectorTableLookup.template", new Dictionary<string, string> { ["TestName"] = "SveBf16_VectorTableLookup_bfloat16_ushort",                                                             ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBf16VectorTableLookup.template", new Dictionary<string, string> { ["TestName"] = "SveBf16_VectorTableLookup_bfloat16_ushort",                                                             ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "BFloat16_BFloat16",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt16",                                                     ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBf16VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "SveBf16_VectorTableLookupExtension_bfloat16_ushort",                                             ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",["Op3VectorType"] = "Vector",   ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveBf16ZipHigh.template",           new Dictionary<string, string> { ["TestName"] = "SveBf16_ZipHigh_bfloat16",                                                                              ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveBf16ZipLow.template",            new Dictionary<string, string> { ["TestName"] = "SveBf16_ZipLow_bfloat16",                                                                               ["Isa"] = "SveBf16",       ["LoadIsa"] = "SveBf16", ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "BFloat16",["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "BFloat16",["Op2VectorType"] = "Vector",   ["Op2BaseType"] = "BFloat16",                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetBFloat16()",      ["NextValueOp2"] = "TestLibrary.Generator.GetBFloat16()",                                                                                     ["ValidateIterResult"] = "false",}),


// SveF32mm
    ("SveF32mmMatrixMultiplyAccumulate.template",new Dictionary<string, string> {["TestName"] = "SveF32mm_MatrixMultiplyAccumulate_float",                                                         ["Isa"] = "SveF32mm",      ["LoadIsa"] = "SveF32mm",["Method"] = "MatrixMultiplyAccumulate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Single", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp3"] = "TestLibrary.Generator.GetSingle()",                        ["ValidateIterResult"] = "false",}),


// SveF64mm
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_float",                                     ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_double",                                    ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_sbyte",                                     ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_short",                                     ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_int",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_long",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_byte",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_ushort",                                    ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_uint",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateEvenInt128FromTwoInputs_ulong",                                     ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_float",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_double",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_sbyte",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_short",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_int",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_long",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_byte",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_ushort",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_uint",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_ConcatenateOddInt128FromTwoInputs_ulong",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_float",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_double",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_sbyte",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_short",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_int",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_long",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_byte",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_ushort",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_uint",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveEvenInt128FromTwoInputs_ulong",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_float",                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_double",                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_sbyte",                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_short",                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_int",                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_long",                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_byte",                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_ushort",                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_uint",                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromHighHalvesOfTwoInputs_ulong",                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_float",                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_double",                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_sbyte",                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_short",                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_int",                           ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_long",                          ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_byte",                          ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_ushort",                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_uint",                          ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveInt128FromLowHalvesOfTwoInputs_ulong",                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_float",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetSingle()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_double",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_sbyte",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_short",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_int",                                           ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt32()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_long",                                          ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_byte",                                          ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_ushort",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_uint",                                          ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmInterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_InterleaveOddInt128FromTwoInputs_ulong",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_float",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                  ["Op2BaseType"] = "Single",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_double",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                  ["Op2BaseType"] = "Double",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_sbyte",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "SByte",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "SByte",                                   ["Op2BaseType"] = "SByte",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSByte()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_short",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                   ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_int",                                         ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                   ["Op2BaseType"] = "Int32",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_long",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                   ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_byte",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_ushort",                                      ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                  ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_uint",                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                  ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveF64mmLoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_LoadVector256AndReplicateToVector_ulong",                                       ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                  ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveF64mmMatrixMultiplyAccumulate.template",new Dictionary<string, string> {["TestName"] = "SveF64mm_MatrixMultiplyAccumulate_double",                                                        ["Isa"] = "SveF64mm",      ["LoadIsa"] = "SveF64mm",["Method"] = "MatrixMultiplyAccumulate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Double", ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Double", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp2"] = "TestLibrary.Generator.GetDouble()",        ["NextValueOp3"] = "TestLibrary.Generator.GetDouble()",                        ["ValidateIterResult"] = "false",}),


// SveFp16
    ("SveFp16Abs.template",               new Dictionary<string, string> { ["TestName"] = "SveFp16_Abs_half",                                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Abs",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16AbsoluteCompareGreaterThan.template",new Dictionary<string, string> {["TestName"] = "SveFp16_AbsoluteCompareGreaterThan_half",                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AbsoluteCompareGreaterThan",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AbsoluteCompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "SveFp16_AbsoluteCompareGreaterThanOrEqual_half",                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AbsoluteCompareGreaterThanOrEqual",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AbsoluteCompareLessThan.template",new Dictionary<string, string> {["TestName"] = "SveFp16_AbsoluteCompareLessThan_half",                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AbsoluteCompareLessThan",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AbsoluteCompareLessThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "SveFp16_AbsoluteCompareLessThanOrEqual_half",                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AbsoluteCompareLessThanOrEqual",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AbsoluteDifference.template",new Dictionary<string, string> { ["TestName"] = "SveFp16_AbsoluteDifference_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AbsoluteDifference",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16Add.template",               new Dictionary<string, string> { ["TestName"] = "SveFp16_Add_half",                                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Add",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AddAcross.template",         new Dictionary<string, string> { ["TestName"] = "SveFp16_AddAcross_half",                                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AddAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16AddPairwise.template",       new Dictionary<string, string> { ["TestName"] = "SveFp16_AddPairwise_half",                                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AddPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AddRotateComplex.template",  new Dictionary<string, string> { ["TestName"] = "SveFp16_AddRotateComplex_half",                                                                         ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AddRotateComplex",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16AddSequentialAcross.template",new Dictionary<string, string> {["TestName"] = "SveFp16_AddSequentialAcross_half",                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "AddSequentialAcross",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareEqual.template",      new Dictionary<string, string> { ["TestName"] = "SveFp16_CompareEqual_half",                                                                             ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareEqual",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareGreaterThan.template",new Dictionary<string, string> { ["TestName"] = "SveFp16_CompareGreaterThan_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareGreaterThan",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareGreaterThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "SveFp16_CompareGreaterThanOrEqual_half",                                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareGreaterThanOrEqual",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareLessThan.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_CompareLessThan_half",                                                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareLessThan",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareLessThanOrEqual.template",new Dictionary<string, string> {["TestName"] = "SveFp16_CompareLessThanOrEqual_half",                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareLessThanOrEqual",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareNotEqualTo.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_CompareNotEqualTo_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareNotEqualTo",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16CompareUnordered.template",  new Dictionary<string, string> { ["TestName"] = "SveFp16_CompareUnordered_half",                                                                         ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CompareUnordered",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16ConcatenateEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConcatenateEvenInt128FromTwoInputs_half",                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConcatenateEvenInt128FromTwoInputs",                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16ConcatenateOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConcatenateOddInt128FromTwoInputs_half",                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConcatenateOddInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConditionalExtractAfterLastActiveElement_half",                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalExtractAfterLastActiveElement",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalExtractAfterLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConditionalExtractAfterLastActiveElement_half",                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalExtractAfterLastActiveElement",                                                              ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalExtractAfterLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConditionalExtractAfterLastActiveElementAndReplicate_half",    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalExtractAfterLastActiveElementAndReplicate",                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConditionalExtractLastActiveElement_half",                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalExtractLastActiveElement",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalExtractLastActiveElement.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConditionalExtractLastActiveElement_half",                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalExtractLastActiveElement",                                                                   ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalExtractLastActiveElementAndReplicate.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ConditionalExtractLastActiveElementAndReplicate_half",              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalExtractLastActiveElementAndReplicate",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConditionalSelect.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_ConditionalSelect_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConditionalSelect",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToDouble.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToDouble_double_half",                                                                   ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToDouble",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Double",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_float",                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_double",                                                                     ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Double",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetDouble()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_short",                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int16",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt16()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_int",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_long",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",                                                                                                                            ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_ushort",                                                                     ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_uint",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToHalf.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToHalf_half_ulong",                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToHalf",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToInt16.template",    new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToInt16_short_half",                                                                     ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToInt16",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToInt32.template",    new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToInt32_int_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToInt32",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToInt64.template",    new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToInt64_long_half",                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToInt64",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToSingle.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToSingle_float_half",                                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToSingle",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToUInt16.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToUInt16_ushort_half",                                                                   ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToUInt16",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToUInt32.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToUInt32_uint_half",                                                                     ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToUInt32",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ConvertToUInt64.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_ConvertToUInt64_ulong_half",                                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ConvertToUInt64",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16CreateFalseMaskHalf.template",new Dictionary<string, string> {["TestName"] = "SveFp16_CreateFalseMaskHalf_half",                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CreateFalseMaskHalf",                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",                                                                                                                                                                                           ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveFp16CreateTrueMaskHalf.template",new Dictionary<string, string> { ["TestName"] = "SveFp16_CreateTrueMaskHalf_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CreateTrueMaskHalf",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",                                     ["Op1BaseType"] = "SveMaskPattern",                                                                                                                   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveFp16CreateWhileReadAfterWriteMask.template",new Dictionary<string, string> {["TestName"] = "SveFp16_CreateWhileReadAfterWriteMask_half",                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CreateWhileReadAfterWriteMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",                                     ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveFp16CreateWhileWriteAfterReadMask.template",new Dictionary<string, string> {["TestName"] = "SveFp16_CreateWhileWriteAfterReadMask_half",                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "CreateWhileWriteAfterReadMask",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",                                     ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveFp16Divide.template",            new Dictionary<string, string> { ["TestName"] = "SveFp16_Divide_half",                                                                                   ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Divide",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16DownConvertNarrowingUpper.template",new Dictionary<string, string> {["TestName"] = "SveFp16_DownConvertNarrowingUpper_half_float",                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "DownConvertNarrowingUpper",                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16DuplicateSelectedScalarToVector.template",new Dictionary<string, string> {["TestName"] = "SveFp16_DuplicateSelectedScalarToVector_half",                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "DuplicateSelectedScalarToVector",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ExtractAfterLastScalar.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ExtractAfterLastScalar_half",                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ExtractAfterLastScalar",                                                                                ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ExtractAfterLastVector.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ExtractAfterLastVector_half",                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ExtractAfterLastVector",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ExtractLastScalar.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_ExtractLastScalar_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ExtractLastScalar",                                                                                     ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ExtractLastVector.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_ExtractLastVector_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ExtractLastVector",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ExtractVector.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_ExtractVector_half",                                                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ExtractVector",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16FloatingPointExponentialAccelerator.template",new Dictionary<string, string> {["TestName"] = "SveFp16_FloatingPointExponentialAccelerator_half_ushort",                               ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FloatingPointExponentialAccelerator",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16",                                                                                                                           ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("SveFp16FusedMultiplyAdd.template",  new Dictionary<string, string> { ["TestName"] = "SveFp16_FusedMultiplyAdd_half",                                                                         ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FusedMultiplyAdd",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16FusedMultiplyAddBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "SveFp16_FusedMultiplyAddBySelectedScalar_half",                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FusedMultiplyAddBySelectedScalar",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16FusedMultiplyAddNegated.template",new Dictionary<string, string> {["TestName"] = "SveFp16_FusedMultiplyAddNegated_half",                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FusedMultiplyAddNegated",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16FusedMultiplySubtract.template",new Dictionary<string, string> {["TestName"] = "SveFp16_FusedMultiplySubtract_half",                                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FusedMultiplySubtract",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16FusedMultiplySubtractBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "SveFp16_FusedMultiplySubtractBySelectedScalar_half",                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FusedMultiplySubtractBySelectedScalar",                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16FusedMultiplySubtractNegated.template",new Dictionary<string, string> {["TestName"] = "SveFp16_FusedMultiplySubtractNegated_half",                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "FusedMultiplySubtractNegated",                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16GetActiveElementCount.template",new Dictionary<string, string> {["TestName"] = "SveFp16_GetActiveElementCount_half",                                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "GetActiveElementCount",                                                                                 ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16InsertIntoShiftedVector.template",new Dictionary<string, string> {["TestName"] = "SveFp16_InsertIntoShiftedVector_half",                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "InsertIntoShiftedVector",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16InterleaveEvenInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveFp16_InterleaveEvenInt128FromTwoInputs_half",                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "InterleaveEvenInt128FromTwoInputs",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16InterleaveInt128FromHighHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveFp16_InterleaveInt128FromHighHalvesOfTwoInputs_half",                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "InterleaveInt128FromHighHalvesOfTwoInputs",                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16InterleaveInt128FromLowHalvesOfTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveFp16_InterleaveInt128FromLowHalvesOfTwoInputs_half",                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "InterleaveInt128FromLowHalvesOfTwoInputs",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16InterleaveOddInt128FromTwoInputs.template",new Dictionary<string, string> {["TestName"] = "SveFp16_InterleaveOddInt128FromTwoInputs_half",                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "InterleaveOddInt128FromTwoInputs",                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVector.template",        new Dictionary<string, string> { ["TestName"] = "SveFp16_LoadVector_half",                                                                               ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVector",                                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVector128AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveFp16_LoadVector128AndReplicateToVector_half",                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVector128AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVector256AndReplicateToVector.template",new Dictionary<string, string> {["TestName"] = "SveFp16_LoadVector256AndReplicateToVector_half",                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVector256AndReplicateToVector",                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVectorFirstFaulting.template",new Dictionary<string, string> {["TestName"] = "SveFp16_LoadVectorFirstFaulting_half",                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVectorFirstFaulting",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVectorNonFaulting.template",new Dictionary<string, string> {["TestName"] = "SveFp16_LoadVectorNonFaulting_half",                                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVectorNonFaulting",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",                                     ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVectorNonTemporal.template",new Dictionary<string, string> {["TestName"] = "SveFp16_LoadVectorNonTemporal_half",                                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVectorNonTemporal",                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVectorx2.template",      new Dictionary<string, string> { ["TestName"] = "SveFp16_LoadVectorx2_half",                                                                             ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVectorx2",                                                         ["RetVectorType"] = "Vector_Vector",["RetBaseType"] = "Half_Half",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVectorx3.template",      new Dictionary<string, string> { ["TestName"] = "SveFp16_LoadVectorx3_half",                                                                             ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVectorx3",                                                         ["RetVectorType"] = "Vector_Vector_Vector",["RetBaseType"] = "Half_Half_Half",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Half",                        ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16LoadVectorx4.template",      new Dictionary<string, string> { ["TestName"] = "SveFp16_LoadVectorx4_half",                                                                             ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "LoadVectorx4",                                                         ["RetVectorType"] = "Vector_Vector_Vector_Vector",["RetBaseType"] = "Half_Half_Half_Half",["Op1VectorType"] = "Vector",["Op1BaseType"] = "Half",            ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16Log2.template",              new Dictionary<string, string> { ["TestName"] = "SveFp16_Log2_short_half",                                                                               ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Log2",                                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int16",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16Max.template",               new Dictionary<string, string> { ["TestName"] = "SveFp16_Max_half",                                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Max",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MaxAcross.template",         new Dictionary<string, string> { ["TestName"] = "SveFp16_MaxAcross_half",                                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MaxAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16MaxNumber.template",         new Dictionary<string, string> { ["TestName"] = "SveFp16_MaxNumber_half",                                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MaxNumber",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MaxNumberAcross.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_MaxNumberAcross_half",                                                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MaxNumberAcross",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16MaxNumberPairwise.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_MaxNumberPairwise_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MaxNumberPairwise",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MaxPairwise.template",       new Dictionary<string, string> { ["TestName"] = "SveFp16_MaxPairwise_half",                                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MaxPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16Min.template",               new Dictionary<string, string> { ["TestName"] = "SveFp16_Min_half",                                                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Min",                                                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MinAcross.template",         new Dictionary<string, string> { ["TestName"] = "SveFp16_MinAcross_half",                                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MinAcross",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16MinNumber.template",         new Dictionary<string, string> { ["TestName"] = "SveFp16_MinNumber_half",                                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MinNumber",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MinNumberAcross.template",   new Dictionary<string, string> { ["TestName"] = "SveFp16_MinNumberAcross_half",                                                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MinNumberAcross",                                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16MinNumberPairwise.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_MinNumberPairwise_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MinNumberPairwise",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MinPairwise.template",       new Dictionary<string, string> { ["TestName"] = "SveFp16_MinPairwise_half",                                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MinPairwise",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16Multiply.template",          new Dictionary<string, string> { ["TestName"] = "SveFp16_Multiply_half",                                                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Multiply",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyAddRotateComplex.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyAddRotateComplex_half",                                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyAddRotateComplex",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyAddRotateComplexBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyAddRotateComplexBySelectedScalar_half",                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyAddRotateComplexBySelectedScalar",                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "Byte",["Op5BaseType"] = "Byte",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()", ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyAddWideningLower_float_half",                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyAddWideningLower.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyAddWideningLower_float_half",                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyAddWideningLower",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                      ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyAddWideningUpper_float_half",                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyAddWideningUpper.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyAddWideningUpper_float_half",                                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyAddWideningUpper",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                      ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyBySelectedScalar.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplyBySelectedScalar_half",                                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyBySelectedScalar",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplyExtended.template",  new Dictionary<string, string> { ["TestName"] = "SveFp16_MultiplyExtended_half",                                                                         ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplyExtended",                                                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplySubtractWideningLower_float_half",                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplySubtractWideningLower.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplySubtractWideningLower_float_half",                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplySubtractWideningLower",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                      ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplySubtractWideningUpper_float_half",                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",        ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16MultiplySubtractWideningUpper.template",new Dictionary<string, string> {["TestName"] = "SveFp16_MultiplySubtractWideningUpper_float_half",                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "MultiplySubtractWideningUpper",                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Single", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetSingle()",["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                      ["ValidateIterResult"] = "false",}),
    ("SveFp16Negate.template",            new Dictionary<string, string> { ["TestName"] = "SveFp16_Negate_half",                                                                                   ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Negate",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16PopCount.template",          new Dictionary<string, string> { ["TestName"] = "SveFp16_PopCount_ushort_half",                                                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "PopCount",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ReciprocalEstimate.template",new Dictionary<string, string> { ["TestName"] = "SveFp16_ReciprocalEstimate_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ReciprocalEstimate",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ReciprocalExponent.template",new Dictionary<string, string> { ["TestName"] = "SveFp16_ReciprocalExponent_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ReciprocalExponent",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ReciprocalSqrtEstimate.template",new Dictionary<string, string> {["TestName"] = "SveFp16_ReciprocalSqrtEstimate_half",                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ReciprocalSqrtEstimate",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ReciprocalSqrtStep.template",new Dictionary<string, string> { ["TestName"] = "SveFp16_ReciprocalSqrtStep_half",                                                                       ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ReciprocalSqrtStep",                                                   ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16ReciprocalStep.template",    new Dictionary<string, string> { ["TestName"] = "SveFp16_ReciprocalStep_half",                                                                           ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ReciprocalStep",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16ReverseElement.template",    new Dictionary<string, string> { ["TestName"] = "SveFp16_ReverseElement_half",                                                                           ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ReverseElement",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16RoundAwayFromZero.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_RoundAwayFromZero_half",                                                                        ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "RoundAwayFromZero",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16RoundToNearest.template",    new Dictionary<string, string> { ["TestName"] = "SveFp16_RoundToNearest_half",                                                                           ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "RoundToNearest",                                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16RoundToNegativeInfinity.template",new Dictionary<string, string> {["TestName"] = "SveFp16_RoundToNegativeInfinity_half",                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "RoundToNegativeInfinity",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16RoundToPositiveInfinity.template",new Dictionary<string, string> {["TestName"] = "SveFp16_RoundToPositiveInfinity_half",                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "RoundToPositiveInfinity",                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16RoundToZero.template",       new Dictionary<string, string> { ["TestName"] = "SveFp16_RoundToZero_half",                                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "RoundToZero",                                                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16Scale.template",             new Dictionary<string, string> { ["TestName"] = "SveFp16_Scale_half_short",                                                                              ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Scale",                                                                ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int16",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetInt16()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16Splice.template",            new Dictionary<string, string> { ["TestName"] = "SveFp16_Splice_half",                                                                                   ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Splice",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16Sqrt.template",              new Dictionary<string, string> { ["TestName"] = "SveFp16_Sqrt_half",                                                                                     ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Sqrt",                                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveFp16_Store_half",                                                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveFp16_Store_half",                                                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector_Vector",["Op3BaseType"] = "Half_Half",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("SveFp16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveFp16_Store_half",                                                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector_Vector_Vector",["Op3BaseType"] = "Half_Half_Half",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16Store.template",             new Dictionary<string, string> { ["TestName"] = "SveFp16_Store_half",                                                                                    ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Store",                                                                                                 ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector_Vector_Vector_Vector",["Op3BaseType"] = "Half_Half_Half_Half",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                             ["ValidateIterResult"] = "false",}),
    ("SveFp16StoreNonTemporal.template",  new Dictionary<string, string> { ["TestName"] = "SveFp16_StoreNonTemporal_half",                                                                         ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "StoreNonTemporal",                                                                                      ["RetBaseType"] = "void",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Half",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                         ["NextValueOp3"] = "TestLibrary.Generator.GetHalf()",                          ["ValidateIterResult"] = "false",}),
    ("SveFp16Subtract.template",          new Dictionary<string, string> { ["TestName"] = "SveFp16_Subtract_half",                                                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "Subtract",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16TransposeEven.template",     new Dictionary<string, string> { ["TestName"] = "SveFp16_TransposeEven_half",                                                                            ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "TransposeEven",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16TransposeOdd.template",      new Dictionary<string, string> { ["TestName"] = "SveFp16_TransposeOdd_half",                                                                             ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "TransposeOdd",                                                         ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16TrigonometricMultiplyAddCoefficient.template",new Dictionary<string, string> {["TestName"] = "SveFp16_TrigonometricMultiplyAddCoefficient_half",                                      ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "TrigonometricMultiplyAddCoefficient",                                  ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16TrigonometricSelectCoefficient.template",new Dictionary<string, string> {["TestName"] = "SveFp16_TrigonometricSelectCoefficient_half_ushort",                                         ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "TrigonometricSelectCoefficient",                                       ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16TrigonometricStartingValue.template",new Dictionary<string, string> {["TestName"] = "SveFp16_TrigonometricStartingValue_half_ushort",                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "TrigonometricStartingValue",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16UnzipEven.template",         new Dictionary<string, string> { ["TestName"] = "SveFp16_UnzipEven_half",                                                                                ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "UnzipEven",                                                            ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16UnzipOdd.template",          new Dictionary<string, string> { ["TestName"] = "SveFp16_UnzipOdd_half",                                                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "UnzipOdd",                                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16UpConvertWideningUpper.template",new Dictionary<string, string> {["TestName"] = "SveFp16_UpConvertWideningUpper_float_half",                                                          ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "UpConvertWideningUpper",                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Single",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveFp16VectorTableLookup.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_VectorTableLookup_half_ushort",                                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16VectorTableLookup.template", new Dictionary<string, string> { ["TestName"] = "SveFp16_VectorTableLookup_half_ushort",                                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "VectorTableLookup",                                                    ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector_Vector",["Op1BaseType"] = "Half_Half",["Op2VectorType"] = "Vector",["Op2BaseType"] = "UInt16",                                                             ["LargestVectorSize"] = "8",                                                                 ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveFp16VectorTableLookupExtension.template",new Dictionary<string, string> {["TestName"] = "SveFp16_VectorTableLookupExtension_half_ushort",                                                 ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "VectorTableLookupExtension",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "UInt16", ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp3"] = "TestLibrary.Generator.GetUInt16()",                        ["ValidateIterResult"] = "false",}),
    ("SveFp16ZipHigh.template",           new Dictionary<string, string> { ["TestName"] = "SveFp16_ZipHigh_half",                                                                                  ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ZipHigh",                                                              ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveFp16ZipLow.template",            new Dictionary<string, string> { ["TestName"] = "SveFp16_ZipLow_half",                                                                                   ["Isa"] = "SveFp16",       ["LoadIsa"] = "SveFp16", ["Method"] = "ZipLow",                                                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Half",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Half",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Half",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetHalf()",          ["NextValueOp2"] = "TestLibrary.Generator.GetHalf()",                                                                                         ["ValidateIterResult"] = "false",}),


// SveI8mm
    ("SveI8mmDotProductSignedUnsigned.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_DotProductSignedUnsigned_int_sbyte_byte",                                                  ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "DotProductSignedUnsigned",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveI8mmDotProductSignedUnsigned.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_DotProductSignedUnsigned_int_sbyte_byte",                                                  ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "DotProductSignedUnsigned",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                      ["ValidateIterResult"] = "false",}),
    ("SveI8mmDotProductUnsignedSigned.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_DotProductUnsignedSigned_int_byte_sbyte",                                                  ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "DotProductUnsignedSigned",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveI8mmDotProductUnsignedSigned.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_DotProductUnsignedSigned_int_byte_sbyte",                                                  ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "DotProductUnsignedSigned",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",["Op4BaseType"] = "UInt64",["LargestVectorSize"] = "8",["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",["NextValueOp2"] = "TestLibrary.Generator.GetByte()",["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                     ["ValidateIterResult"] = "false",}),
    ("SveI8mmMatrixMultiplyAccumulate.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_MatrixMultiplyAccumulate_int_sbyte",                                                       ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "MatrixMultiplyAccumulate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "SByte",  ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetSByte()",         ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),
    ("SveI8mmMatrixMultiplyAccumulate.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_MatrixMultiplyAccumulate_uint_byte",                                                       ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "MatrixMultiplyAccumulate",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetByte()",                          ["ValidateIterResult"] = "false",}),
    ("SveI8mmMatrixMultiplyAccumulateUnsignedSigned.template",new Dictionary<string, string> {["TestName"] = "SveI8mm_MatrixMultiplyAccumulateUnsignedSigned_int_byte_sbyte",                      ["Isa"] = "SveI8mm",       ["LoadIsa"] = "SveI8mm", ["Method"] = "MatrixMultiplyAccumulateUnsignedSigned",                               ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int32",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int32",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",   ["Op3VectorType"] = "Vector",    ["Op3BaseType"] = "SByte",  ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt32()",         ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp3"] = "TestLibrary.Generator.GetSByte()",                         ["ValidateIterResult"] = "false",}),


// Sha3
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_byte",                                                                             ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<byte>",                          ["Op1BaseType"] = "Vector128<byte>",                         ["Op2BaseType"] = "Vector128<byte>",                         ["Op3BaseType"] = "Vector128<byte>",["LargestVectorSize"] = "8",                                                                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_ushort",                                                                           ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<ushort>",                        ["Op1BaseType"] = "Vector128<ushort>",                       ["Op2BaseType"] = "Vector128<ushort>",                       ["Op3BaseType"] = "Vector128<ushort>",["LargestVectorSize"] = "8",                                                                                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_uint",                                                                             ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<uint>",                          ["Op1BaseType"] = "Vector128<uint>",                         ["Op2BaseType"] = "Vector128<uint>",                         ["Op3BaseType"] = "Vector128<uint>",["LargestVectorSize"] = "8",                                                                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_ulong",                                                                            ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<ulong>",                         ["Op1BaseType"] = "Vector128<ulong>",                        ["Op2BaseType"] = "Vector128<ulong>",                        ["Op3BaseType"] = "Vector128<ulong>",["LargestVectorSize"] = "8",                                                                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_sbyte",                                                                            ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<sbyte>",                         ["Op1BaseType"] = "Vector128<sbyte>",                        ["Op2BaseType"] = "Vector128<sbyte>",                        ["Op3BaseType"] = "Vector128<sbyte>",["LargestVectorSize"] = "8",                                                                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_short",                                                                            ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<short>",                         ["Op1BaseType"] = "Vector128<short>",                        ["Op2BaseType"] = "Vector128<short>",                        ["Op3BaseType"] = "Vector128<short>",["LargestVectorSize"] = "8",                                                                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_int",                                                                              ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<int>",                           ["Op1BaseType"] = "Vector128<int>",                          ["Op2BaseType"] = "Vector128<int>",                          ["Op3BaseType"] = "Vector128<int>",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseClearXor.template",      new Dictionary<string, string> { ["TestName"] = "Sha3_BitwiseClearXor_long",                                                                             ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseClearXor",                                                                                       ["RetBaseType"] = "Vector128<long>",                          ["Op1BaseType"] = "Vector128<long>",                         ["Op2BaseType"] = "Vector128<long>",                         ["Op3BaseType"] = "Vector128<long>",["LargestVectorSize"] = "8",                                                                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sha3BitwiseRotateLeftBy1AndXor.template",new Dictionary<string, string> {["TestName"] = "Sha3_BitwiseRotateLeftBy1AndXor_ulong",                                                             ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "BitwiseRotateLeftBy1AndXor",                                                                            ["RetBaseType"] = "Vector128<ulong>",                         ["Op1BaseType"] = "Vector128<ulong>",                        ["Op2BaseType"] = "Vector128<ulong>",                                                    ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_byte",                                                                                         ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<byte>",                          ["Op1BaseType"] = "Vector128<byte>",                         ["Op2BaseType"] = "Vector128<byte>",                         ["Op3BaseType"] = "Vector128<byte>",["LargestVectorSize"] = "8",                                                                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_ushort",                                                                                       ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<ushort>",                        ["Op1BaseType"] = "Vector128<ushort>",                       ["Op2BaseType"] = "Vector128<ushort>",                       ["Op3BaseType"] = "Vector128<ushort>",["LargestVectorSize"] = "8",                                                                                                                                                                                                     ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_uint",                                                                                         ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<uint>",                          ["Op1BaseType"] = "Vector128<uint>",                         ["Op2BaseType"] = "Vector128<uint>",                         ["Op3BaseType"] = "Vector128<uint>",["LargestVectorSize"] = "8",                                                                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_ulong",                                                                                        ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<ulong>",                         ["Op1BaseType"] = "Vector128<ulong>",                        ["Op2BaseType"] = "Vector128<ulong>",                        ["Op3BaseType"] = "Vector128<ulong>",["LargestVectorSize"] = "8",                                                                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_sbyte",                                                                                        ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<sbyte>",                         ["Op1BaseType"] = "Vector128<sbyte>",                        ["Op2BaseType"] = "Vector128<sbyte>",                        ["Op3BaseType"] = "Vector128<sbyte>",["LargestVectorSize"] = "8",                                                                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_short",                                                                                        ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<short>",                         ["Op1BaseType"] = "Vector128<short>",                        ["Op2BaseType"] = "Vector128<short>",                        ["Op3BaseType"] = "Vector128<short>",["LargestVectorSize"] = "8",                                                                                                                                                                                                      ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_int",                                                                                          ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<int>",                           ["Op1BaseType"] = "Vector128<int>",                          ["Op2BaseType"] = "Vector128<int>",                          ["Op3BaseType"] = "Vector128<int>",["LargestVectorSize"] = "8",                                                                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("Sha3Xor.template",                  new Dictionary<string, string> { ["TestName"] = "Sha3_Xor_long",                                                                                         ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "Xor",                                                                                                   ["RetBaseType"] = "Vector128<long>",                          ["Op1BaseType"] = "Vector128<long>",                         ["Op2BaseType"] = "Vector128<long>",                         ["Op3BaseType"] = "Vector128<long>",["LargestVectorSize"] = "8",                                                                                                                                                                                                       ["ValidateIterResult"] = "false",}),
    ("Sha3XorRotateRight.template",       new Dictionary<string, string> { ["TestName"] = "Sha3_XorRotateRight_ulong",                                                                             ["Isa"] = "Sha3",          ["LoadIsa"] = "Sha3",    ["Method"] = "XorRotateRight",                                                                                        ["RetBaseType"] = "Vector128<ulong>",                         ["Op1BaseType"] = "Vector128<ulong>",                        ["Op2BaseType"] = "Vector128<ulong>",                        ["Op3BaseType"] = "Byte",   ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),


// Sm4
    ("Sm4Sm4EncryptionAndDecryption.template",new Dictionary<string, string> {["TestName"] = "Sm4_Sm4EncryptionAndDecryption_uint",                                                                ["Isa"] = "Sm4",           ["LoadIsa"] = "Sm4",     ["Method"] = "Sm4EncryptionAndDecryption",                                                                            ["RetBaseType"] = "Vector128<uint>",                          ["Op1BaseType"] = "Vector128<uint>",                         ["Op2BaseType"] = "Vector128<uint>",                                                     ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),
    ("Sm4Sm4KeyUpdates.template",         new Dictionary<string, string> { ["TestName"] = "Sm4_Sm4KeyUpdates_uint",                                                                                ["Isa"] = "Sm4",           ["LoadIsa"] = "Sm4",     ["Method"] = "Sm4KeyUpdates",                                                                                         ["RetBaseType"] = "Vector128<uint>",                          ["Op1BaseType"] = "Vector128<uint>",                         ["Op2BaseType"] = "Vector128<uint>",                                                     ["LargestVectorSize"] = "8",                                                                                                                                                                                                               ["ValidateIterResult"] = "false",}),


// SveAes
    ("SveAesAesInverseMixColumns.template",new Dictionary<string, string> {["TestName"] = "SveAes_AesInverseMixColumns_byte",                                                                      ["Isa"] = "SveAes",        ["LoadIsa"] = "SveAes",  ["Method"] = "AesInverseMixColumns",                                                 ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAesAesMixColumns.template",      new Dictionary<string, string> { ["TestName"] = "SveAes_AesMixColumns_byte",                                                                             ["Isa"] = "SveAes",        ["LoadIsa"] = "SveAes",  ["Method"] = "AesMixColumns",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",                                                                                                                             ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",                                                                                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveAesAesSingleRoundDecryption.template",new Dictionary<string, string> {["TestName"] = "SveAes_AesSingleRoundDecryption_byte",                                                              ["Isa"] = "SveAes",        ["LoadIsa"] = "SveAes",  ["Method"] = "AesSingleRoundDecryption",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAesAesSingleRoundEncryption.template",new Dictionary<string, string> {["TestName"] = "SveAes_AesSingleRoundEncryption_byte",                                                              ["Isa"] = "SveAes",        ["LoadIsa"] = "SveAes",  ["Method"] = "AesSingleRoundEncryption",                                             ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveAesPolynomialMultiplyWideningLower.template",new Dictionary<string, string> {["TestName"] = "SveAes_PolynomialMultiplyWideningLower_ulong",                                               ["Isa"] = "SveAes",        ["LoadIsa"] = "SveAes",  ["Method"] = "PolynomialMultiplyWideningLower",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveAesPolynomialMultiplyWideningUpper.template",new Dictionary<string, string> {["TestName"] = "SveAes_PolynomialMultiplyWideningUpper_ulong",                                               ["Isa"] = "SveAes",        ["LoadIsa"] = "SveAes",  ["Method"] = "PolynomialMultiplyWideningUpper",                                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// SveBitperm
    ("SveBitpermGatherLowerBitsFromPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GatherLowerBitsFromPositionsSelectedByBitmask_byte",            ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GatherLowerBitsFromPositionsSelectedByBitmask",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveBitpermGatherLowerBitsFromPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GatherLowerBitsFromPositionsSelectedByBitmask_ushort",          ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GatherLowerBitsFromPositionsSelectedByBitmask",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermGatherLowerBitsFromPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GatherLowerBitsFromPositionsSelectedByBitmask_uint",            ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GatherLowerBitsFromPositionsSelectedByBitmask",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermGatherLowerBitsFromPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GatherLowerBitsFromPositionsSelectedByBitmask_ulong",           ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GatherLowerBitsFromPositionsSelectedByBitmask",                      ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermGroupBitsToRightOrLeftAsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GroupBitsToRightOrLeftAsSelectedByBitmask_byte",                    ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GroupBitsToRightOrLeftAsSelectedByBitmask",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveBitpermGroupBitsToRightOrLeftAsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GroupBitsToRightOrLeftAsSelectedByBitmask_ushort",                  ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GroupBitsToRightOrLeftAsSelectedByBitmask",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermGroupBitsToRightOrLeftAsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GroupBitsToRightOrLeftAsSelectedByBitmask_uint",                    ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GroupBitsToRightOrLeftAsSelectedByBitmask",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermGroupBitsToRightOrLeftAsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_GroupBitsToRightOrLeftAsSelectedByBitmask_ulong",                   ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "GroupBitsToRightOrLeftAsSelectedByBitmask",                          ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermScatterLowerBitsIntoPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_ScatterLowerBitsIntoPositionsSelectedByBitmask_byte",          ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "ScatterLowerBitsIntoPositionsSelectedByBitmask",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Byte",    ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Byte",   ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Byte",                                                                ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetByte()",          ["NextValueOp2"] = "TestLibrary.Generator.GetByte()",                                                                                         ["ValidateIterResult"] = "false",}),
    ("SveBitpermScatterLowerBitsIntoPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_ScatterLowerBitsIntoPositionsSelectedByBitmask_ushort",        ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "ScatterLowerBitsIntoPositionsSelectedByBitmask",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt16",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt16", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt16",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt16()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt16()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermScatterLowerBitsIntoPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_ScatterLowerBitsIntoPositionsSelectedByBitmask_uint",          ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "ScatterLowerBitsIntoPositionsSelectedByBitmask",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveBitpermScatterLowerBitsIntoPositionsSelectedByBitmask.template",new Dictionary<string, string> {["TestName"] = "SveBitperm_ScatterLowerBitsIntoPositionsSelectedByBitmask_ulong",         ["Isa"] = "SveBitperm",    ["LoadIsa"] = "SveBitperm",["Method"] = "ScatterLowerBitsIntoPositionsSelectedByBitmask",                     ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// SveSha3
    ("SveSha3BitwiseRotateLeftBy1AndXor.template",new Dictionary<string, string> {["TestName"] = "SveSha3_BitwiseRotateLeftBy1AndXor_long",                                                        ["Isa"] = "SveSha3",       ["LoadIsa"] = "SveSha3", ["Method"] = "BitwiseRotateLeftBy1AndXor",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "Int64",   ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "Int64",  ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "Int64",                                                               ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetInt64()",         ["NextValueOp2"] = "TestLibrary.Generator.GetInt64()",                                                                                        ["ValidateIterResult"] = "false",}),
    ("SveSha3BitwiseRotateLeftBy1AndXor.template",new Dictionary<string, string> {["TestName"] = "SveSha3_BitwiseRotateLeftBy1AndXor_ulong",                                                       ["Isa"] = "SveSha3",       ["LoadIsa"] = "SveSha3", ["Method"] = "BitwiseRotateLeftBy1AndXor",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt64",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt64", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt64",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt64()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt64()",                                                                                       ["ValidateIterResult"] = "false",}),


// SveSm4
    ("SveSm4Sm4EncryptionAndDecryption.template",new Dictionary<string, string> {["TestName"] = "SveSm4_Sm4EncryptionAndDecryption_uint",                                                          ["Isa"] = "SveSm4",        ["LoadIsa"] = "SveSm4",  ["Method"] = "Sm4EncryptionAndDecryption",                                           ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),
    ("SveSm4Sm4KeyUpdates.template",      new Dictionary<string, string> { ["TestName"] = "SveSm4_Sm4KeyUpdates_uint",                                                                             ["Isa"] = "SveSm4",        ["LoadIsa"] = "SveSm4",  ["Method"] = "Sm4KeyUpdates",                                                        ["RetVectorType"] = "Vector",    ["RetBaseType"] = "UInt32",  ["Op1VectorType"] = "Vector",    ["Op1BaseType"] = "UInt32", ["Op2VectorType"] = "Vector",    ["Op2BaseType"] = "UInt32",                                                              ["LargestVectorSize"] = "8",  ["NextValueOp1"] = "TestLibrary.Generator.GetUInt32()",        ["NextValueOp2"] = "TestLibrary.Generator.GetUInt32()",                                                                                       ["ValidateIterResult"] = "false",}),


